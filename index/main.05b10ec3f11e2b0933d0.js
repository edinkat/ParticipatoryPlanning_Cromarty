/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
define(["esri/Color","esri/Graphic","esri/WebScene","esri/core/Accessor","esri/core/Collection","esri/core/accessorSupport/decorators","esri/core/promiseUtils","esri/core/watchUtils","esri/geometry/Point","esri/geometry/Polygon","esri/geometry/Polyline","esri/geometry/SpatialReference","esri/geometry/geometryEngine","esri/layers/GraphicsLayer","esri/layers/VectorTileLayer","esri/portal/Portal","esri/portal/PortalQueryParams","esri/renderers","esri/request","esri/symbols/ObjectSymbol3DLayer","esri/symbols/PointSymbol3D","esri/symbols/PolygonSymbol3D","esri/symbols/SimpleFillSymbol","esri/symbols/SimpleLineSymbol","esri/symbols/WebStyleSymbol","esri/views/SceneView","esri/views/layers/support/FeatureFilter","esri/widgets/Sketch/SketchViewModel","esri/widgets/Widget","esri/widgets/support/widget"], (__WEBPACK_EXTERNAL_MODULE_esri_Color__, __WEBPACK_EXTERNAL_MODULE_esri_Graphic__, __WEBPACK_EXTERNAL_MODULE_esri_WebScene__, __WEBPACK_EXTERNAL_MODULE_esri_core_Accessor__, __WEBPACK_EXTERNAL_MODULE_esri_core_Collection__, __WEBPACK_EXTERNAL_MODULE_esri_core_accessorSupport_decorators__, __WEBPACK_EXTERNAL_MODULE_esri_core_promiseUtils__, __WEBPACK_EXTERNAL_MODULE_esri_core_watchUtils__, __WEBPACK_EXTERNAL_MODULE_esri_geometry_Point__, __WEBPACK_EXTERNAL_MODULE_esri_geometry_Polygon__, __WEBPACK_EXTERNAL_MODULE_esri_geometry_Polyline__, __WEBPACK_EXTERNAL_MODULE_esri_geometry_SpatialReference__, __WEBPACK_EXTERNAL_MODULE_esri_geometry_geometryEngine__, __WEBPACK_EXTERNAL_MODULE_esri_layers_GraphicsLayer__, __WEBPACK_EXTERNAL_MODULE_esri_layers_VectorTileLayer__, __WEBPACK_EXTERNAL_MODULE_esri_portal_Portal__, __WEBPACK_EXTERNAL_MODULE_esri_portal_PortalQueryParams__, __WEBPACK_EXTERNAL_MODULE_esri_renderers__, __WEBPACK_EXTERNAL_MODULE_esri_request__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_ObjectSymbol3DLayer__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_PointSymbol3D__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_PolygonSymbol3D__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_SimpleFillSymbol__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_SimpleLineSymbol__, __WEBPACK_EXTERNAL_MODULE_esri_symbols_WebStyleSymbol__, __WEBPACK_EXTERNAL_MODULE_esri_views_SceneView__, __WEBPACK_EXTERNAL_MODULE_esri_views_layers_support_FeatureFilter__, __WEBPACK_EXTERNAL_MODULE_esri_widgets_Sketch_SketchViewModel__, __WEBPACK_EXTERNAL_MODULE_esri_widgets_Widget__, __WEBPACK_EXTERNAL_MODULE_esri_widgets_support_widget__) => { return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/animejs/lib/anime.es.js":
/*!**********************************************!*\
  !*** ./node_modules/animejs/lib/anime.es.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n * anime.js v3.2.1\n * (c) 2020 Julian Garnier\n * Released under the MIT license\n * animejs.com\n */\n\n// Defaults\n\nvar defaultInstanceSettings = {\n  update: null,\n  begin: null,\n  loopBegin: null,\n  changeBegin: null,\n  change: null,\n  changeComplete: null,\n  loopComplete: null,\n  complete: null,\n  loop: 1,\n  direction: 'normal',\n  autoplay: true,\n  timelineOffset: 0\n};\n\nvar defaultTweenSettings = {\n  duration: 1000,\n  delay: 0,\n  endDelay: 0,\n  easing: 'easeOutElastic(1, .5)',\n  round: 0\n};\n\nvar validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\n\n// Caching\n\nvar cache = {\n  CSS: {},\n  springs: {}\n};\n\n// Utils\n\nfunction minMax(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction stringContains(str, text) {\n  return str.indexOf(text) > -1;\n}\n\nfunction applyArguments(func, args) {\n  return func.apply(null, args);\n}\n\nvar is = {\n  arr: function (a) { return Array.isArray(a); },\n  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },\n  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },\n  svg: function (a) { return a instanceof SVGElement; },\n  inp: function (a) { return a instanceof HTMLInputElement; },\n  dom: function (a) { return a.nodeType || is.svg(a); },\n  str: function (a) { return typeof a === 'string'; },\n  fnc: function (a) { return typeof a === 'function'; },\n  und: function (a) { return typeof a === 'undefined'; },\n  nil: function (a) { return is.und(a) || a === null; },\n  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },\n  rgb: function (a) { return /^rgb/.test(a); },\n  hsl: function (a) { return /^hsl/.test(a); },\n  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },\n  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; },\n};\n\n// Easings\n\nfunction parseEasingParameters(string) {\n  var match = /\\(([^)]+)\\)/.exec(string);\n  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];\n}\n\n// Spring solver inspired by Webkit Copyright Â© 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js\n\nfunction spring(string, duration) {\n\n  var params = parseEasingParameters(string);\n  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);\n  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);\n  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);\n  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  function solver(t) {\n    var progress = duration ? (duration * t) / 1000 : t;\n    if (zeta < 1) {\n      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n    } else {\n      progress = (a + b * progress) * Math.exp(-progress * w0);\n    }\n    if (t === 0 || t === 1) { return t; }\n    return 1 - progress;\n  }\n\n  function getDuration() {\n    var cached = cache.springs[string];\n    if (cached) { return cached; }\n    var frame = 1/6;\n    var elapsed = 0;\n    var rest = 0;\n    while(true) {\n      elapsed += frame;\n      if (solver(elapsed) === 1) {\n        rest++;\n        if (rest >= 16) { break; }\n      } else {\n        rest = 0;\n      }\n    }\n    var duration = elapsed * frame * 1000;\n    cache.springs[string] = duration;\n    return duration;\n  }\n\n  return duration ? solver : getDuration;\n\n}\n\n// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n\nfunction steps(steps) {\n  if ( steps === void 0 ) steps = 10;\n\n  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };\n}\n\n// BezierEasing https://github.com/gre/bezier-easing\n\nvar bezier = (function () {\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }\n  function C(aA1)      { return 3.0 * aA1 }\n\n  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }\n  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }\n    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) { return aGuessT; }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function bezier(mX1, mY1, mX2, mY2) {\n\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }\n    var sampleValues = new Float32Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n\n      var intervalStart = 0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= 0.001) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n\n    }\n\n    return function (x) {\n      if (mX1 === mY1 && mX2 === mY2) { return x; }\n      if (x === 0 || x === 1) { return x; }\n      return calcBezier(getTForX(x), mY1, mY2);\n    }\n\n  }\n\n  return bezier;\n\n})();\n\nvar penner = (function () {\n\n  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n  var eases = { linear: function () { return function (t) { return t; }; } };\n\n  var functionEasings = {\n    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },\n    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },\n    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },\n    Bounce: function () { return function (t) {\n      var pow2, b = 4;\n      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}\n      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)\n    }; },\n    Elastic: function (amplitude, period) {\n      if ( amplitude === void 0 ) amplitude = 1;\n      if ( period === void 0 ) period = .5;\n\n      var a = minMax(amplitude, 1, 10);\n      var p = minMax(period, .1, 2);\n      return function (t) {\n        return (t === 0 || t === 1) ? t : \n          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);\n      }\n    }\n  };\n\n  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n\n  baseEasings.forEach(function (name, i) {\n    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };\n  });\n\n  Object.keys(functionEasings).forEach(function (name) {\n    var easeIn = functionEasings[name];\n    eases['easeIn' + name] = easeIn;\n    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };\n    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : \n      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };\n    eases['easeOutIn' + name] = function (a, b) { return function (t) { return t < 0.5 ? (1 - easeIn(a, b)(1 - t * 2)) / 2 : \n      (easeIn(a, b)(t * 2 - 1) + 1) / 2; }; };\n  });\n\n  return eases;\n\n})();\n\nfunction parseEasings(easing, duration) {\n  if (is.fnc(easing)) { return easing; }\n  var name = easing.split('(')[0];\n  var ease = penner[name];\n  var args = parseEasingParameters(easing);\n  switch (name) {\n    case 'spring' : return spring(easing, duration);\n    case 'cubicBezier' : return applyArguments(bezier, args);\n    case 'steps' : return applyArguments(steps, args);\n    default : return applyArguments(ease, args);\n  }\n}\n\n// Strings\n\nfunction selectString(str) {\n  try {\n    var nodes = document.querySelectorAll(str);\n    return nodes;\n  } catch(e) {\n    return;\n  }\n}\n\n// Arrays\n\nfunction filterArray(arr, callback) {\n  var len = arr.length;\n  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    if (i in arr) {\n      var val = arr[i];\n      if (callback.call(thisArg, val, i, arr)) {\n        result.push(val);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenArray(arr) {\n  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);\n}\n\nfunction toArray(o) {\n  if (is.arr(o)) { return o; }\n  if (is.str(o)) { o = selectString(o) || o; }\n  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }\n  return [o];\n}\n\nfunction arrayContains(arr, val) {\n  return arr.some(function (a) { return a === val; });\n}\n\n// Objects\n\nfunction cloneObject(o) {\n  var clone = {};\n  for (var p in o) { clone[p] = o[p]; }\n  return clone;\n}\n\nfunction replaceObjectProps(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }\n  return o;\n}\n\nfunction mergeObjects(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }\n  return o;\n}\n\n// Colors\n\nfunction rgbToRgba(rgbValue) {\n  var rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n  return rgb ? (\"rgba(\" + (rgb[1]) + \",1)\") : rgbValue;\n}\n\nfunction hexToRgba(hexValue) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return (\"rgba(\" + r + \",\" + g + \",\" + b + \",1)\");\n}\n\nfunction hslToRgba(hslValue) {\n  var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n  var h = parseInt(hsl[1], 10) / 360;\n  var s = parseInt(hsl[2], 10) / 100;\n  var l = parseInt(hsl[3], 10) / 100;\n  var a = hsl[4] || 1;\n  function hue2rgb(p, q, t) {\n    if (t < 0) { t += 1; }\n    if (t > 1) { t -= 1; }\n    if (t < 1/6) { return p + (q - p) * 6 * t; }\n    if (t < 1/2) { return q; }\n    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }\n    return p;\n  }\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n  return (\"rgba(\" + (r * 255) + \",\" + (g * 255) + \",\" + (b * 255) + \",\" + a + \")\");\n}\n\nfunction colorToRgb(val) {\n  if (is.rgb(val)) { return rgbToRgba(val); }\n  if (is.hex(val)) { return hexToRgba(val); }\n  if (is.hsl(val)) { return hslToRgba(val); }\n}\n\n// Units\n\nfunction getUnit(val) {\n  var split = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n  if (split) { return split[1]; }\n}\n\nfunction getTransformUnit(propName) {\n  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }\n  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }\n}\n\n// Values\n\nfunction getFunctionValue(val, animatable) {\n  if (!is.fnc(val)) { return val; }\n  return val(animatable.target, animatable.id, animatable.total);\n}\n\nfunction getAttribute(el, prop) {\n  return el.getAttribute(prop);\n}\n\nfunction convertPxToUnit(el, value, unit) {\n  var valueUnit = getUnit(value);\n  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }\n  var cached = cache.CSS[value + unit];\n  if (!is.und(cached)) { return cached; }\n  var baseline = 100;\n  var tempEl = document.createElement(el.tagName);\n  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;\n  parentEl.appendChild(tempEl);\n  tempEl.style.position = 'absolute';\n  tempEl.style.width = baseline + unit;\n  var factor = baseline / tempEl.offsetWidth;\n  parentEl.removeChild(tempEl);\n  var convertedUnit = factor * parseFloat(value);\n  cache.CSS[value + unit] = convertedUnit;\n  return convertedUnit;\n}\n\nfunction getCSSValue(el, prop, unit) {\n  if (prop in el.style) {\n    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';\n    return unit ? convertPxToUnit(el, value, unit) : value;\n  }\n}\n\nfunction getAnimationType(el, prop) {\n  if (is.dom(el) && !is.inp(el) && (!is.nil(getAttribute(el, prop)) || (is.svg(el) && el[prop]))) { return 'attribute'; }\n  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }\n  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }\n  if (el[prop] != null) { return 'object'; }\n}\n\nfunction getElementTransforms(el) {\n  if (!is.dom(el)) { return; }\n  var str = el.style.transform || '';\n  var reg  = /(\\w+)\\(([^)]*)\\)/g;\n  var transforms = new Map();\n  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }\n  return transforms;\n}\n\nfunction getTransformValue(el, propName, animatable, unit) {\n  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);\n  var value = getElementTransforms(el).get(propName) || defaultVal;\n  if (animatable) {\n    animatable.transforms.list.set(propName, value);\n    animatable.transforms['last'] = propName;\n  }\n  return unit ? convertPxToUnit(el, value, unit) : value;\n}\n\nfunction getOriginalTargetValue(target, propName, unit, animatable) {\n  switch (getAnimationType(target, propName)) {\n    case 'transform': return getTransformValue(target, propName, animatable, unit);\n    case 'css': return getCSSValue(target, propName, unit);\n    case 'attribute': return getAttribute(target, propName);\n    default: return target[propName] || 0;\n  }\n}\n\nfunction getRelativeValue(to, from) {\n  var operator = /^(\\*=|\\+=|-=)/.exec(to);\n  if (!operator) { return to; }\n  var u = getUnit(to) || 0;\n  var x = parseFloat(from);\n  var y = parseFloat(to.replace(operator[0], ''));\n  switch (operator[0][0]) {\n    case '+': return x + y + u;\n    case '-': return x - y + u;\n    case '*': return x * y + u;\n  }\n}\n\nfunction validateValue(val, unit) {\n  if (is.col(val)) { return colorToRgb(val); }\n  if (/\\s/g.test(val)) { return val; }\n  var originalUnit = getUnit(val);\n  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n  if (unit) { return unitLess + unit; }\n  return unitLess;\n}\n\n// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes\n// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el) {\n  return Math.PI * 2 * getAttribute(el, 'r');\n}\n\nfunction getRectLength(el) {\n  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);\n}\n\nfunction getLineLength(el) {\n  return getDistance(\n    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, \n    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}\n  );\n}\n\nfunction getPolylineLength(el) {\n  var points = el.points;\n  var totalLength = 0;\n  var previousPos;\n  for (var i = 0 ; i < points.numberOfItems; i++) {\n    var currentPos = points.getItem(i);\n    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el) {\n  var points = el.points;\n  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n}\n\n// Path animation\n\nfunction getTotalLength(el) {\n  if (el.getTotalLength) { return el.getTotalLength(); }\n  switch(el.tagName.toLowerCase()) {\n    case 'circle': return getCircleLength(el);\n    case 'rect': return getRectLength(el);\n    case 'line': return getLineLength(el);\n    case 'polyline': return getPolylineLength(el);\n    case 'polygon': return getPolygonLength(el);\n  }\n}\n\nfunction setDashoffset(el) {\n  var pathLength = getTotalLength(el);\n  el.setAttribute('stroke-dasharray', pathLength);\n  return pathLength;\n}\n\n// Motion path\n\nfunction getParentSvgEl(el) {\n  var parentEl = el.parentNode;\n  while (is.svg(parentEl)) {\n    if (!is.svg(parentEl.parentNode)) { break; }\n    parentEl = parentEl.parentNode;\n  }\n  return parentEl;\n}\n\nfunction getParentSvg(pathEl, svgData) {\n  var svg = svgData || {};\n  var parentSvgEl = svg.el || getParentSvgEl(pathEl);\n  var rect = parentSvgEl.getBoundingClientRect();\n  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');\n  var width = rect.width;\n  var height = rect.height;\n  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);\n  return {\n    el: parentSvgEl,\n    viewBox: viewBox,\n    x: viewBox[0] / 1,\n    y: viewBox[1] / 1,\n    w: width,\n    h: height,\n    vW: viewBox[2],\n    vH: viewBox[3]\n  }\n}\n\nfunction getPath(path, percent) {\n  var pathEl = is.str(path) ? selectString(path)[0] : path;\n  var p = percent || 100;\n  return function(property) {\n    return {\n      property: property,\n      el: pathEl,\n      svg: getParentSvg(pathEl),\n      totalLength: getTotalLength(pathEl) * (p / 100)\n    }\n  }\n}\n\nfunction getPathProgress(path, progress, isPathTargetInsideSVG) {\n  function point(offset) {\n    if ( offset === void 0 ) offset = 0;\n\n    var l = progress + offset >= 1 ? progress + offset : 0;\n    return path.el.getPointAtLength(l);\n  }\n  var svg = getParentSvg(path.el, path.svg);\n  var p = point();\n  var p0 = point(-1);\n  var p1 = point(+1);\n  var scaleX = isPathTargetInsideSVG ? 1 : svg.w / svg.vW;\n  var scaleY = isPathTargetInsideSVG ? 1 : svg.h / svg.vH;\n  switch (path.property) {\n    case 'x': return (p.x - svg.x) * scaleX;\n    case 'y': return (p.y - svg.y) * scaleY;\n    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n  }\n}\n\n// Decompose value\n\nfunction decomposeValue(val, unit) {\n  // const rgx = /-?\\d*\\.?\\d+/g; // handles basic numbers\n  // const rgx = /[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var rgx = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n  return {\n    original: value,\n    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n    strings: (is.str(val) || unit) ? value.split(rgx) : []\n  }\n}\n\n// Animatables\n\nfunction parseTargets(targets) {\n  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });\n}\n\nfunction getAnimatables(targets) {\n  var parsed = parseTargets(targets);\n  return parsed.map(function (t, i) {\n    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };\n  });\n}\n\n// Properties\n\nfunction normalizePropertyTweens(prop, tweenSettings) {\n  var settings = cloneObject(tweenSettings);\n  // Override duration if easing is a spring\n  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }\n  if (is.arr(prop)) {\n    var l = prop.length;\n    var isFromTo = (l === 2 && !is.obj(prop[0]));\n    if (!isFromTo) {\n      // Duration divided by the number of tweens\n      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }\n    } else {\n      // Transform [from, to] values shorthand to a valid tween value\n      prop = {value: prop};\n    }\n  }\n  var propArray = is.arr(prop) ? prop : [prop];\n  return propArray.map(function (v, i) {\n    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};\n    // Default delay value should only be applied to the first tween\n    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }\n    // Default endDelay value should only be applied to the last tween\n    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }\n    return obj;\n  }).map(function (k) { return mergeObjects(k, settings); });\n}\n\n\nfunction flattenKeyframes(keyframes) {\n  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })\n  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);\n  var properties = {};\n  var loop = function ( i ) {\n    var propName = propertyNames[i];\n    properties[propName] = keyframes.map(function (key) {\n      var newKey = {};\n      for (var p in key) {\n        if (is.key(p)) {\n          if (p == propName) { newKey.value = key[p]; }\n        } else {\n          newKey[p] = key[p];\n        }\n      }\n      return newKey;\n    });\n  };\n\n  for (var i = 0; i < propertyNames.length; i++) loop( i );\n  return properties;\n}\n\nfunction getProperties(tweenSettings, params) {\n  var properties = [];\n  var keyframes = params.keyframes;\n  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }\n  for (var p in params) {\n    if (is.key(p)) {\n      properties.push({\n        name: p,\n        tweens: normalizePropertyTweens(params[p], tweenSettings)\n      });\n    }\n  }\n  return properties;\n}\n\n// Tweens\n\nfunction normalizeTweenValues(tween, animatable) {\n  var t = {};\n  for (var p in tween) {\n    var value = getFunctionValue(tween[p], animatable);\n    if (is.arr(value)) {\n      value = value.map(function (v) { return getFunctionValue(v, animatable); });\n      if (value.length === 1) { value = value[0]; }\n    }\n    t[p] = value;\n  }\n  t.duration = parseFloat(t.duration);\n  t.delay = parseFloat(t.delay);\n  return t;\n}\n\nfunction normalizeTweens(prop, animatable) {\n  var previousTween;\n  return prop.tweens.map(function (t) {\n    var tween = normalizeTweenValues(t, animatable);\n    var tweenValue = tween.value;\n    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;\n    var toUnit = getUnit(to);\n    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);\n    var previousValue = previousTween ? previousTween.to.original : originalValue;\n    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n    var fromUnit = getUnit(from) || getUnit(originalValue);\n    var unit = toUnit || fromUnit;\n    if (is.und(to)) { to = previousValue; }\n    tween.from = decomposeValue(from, unit);\n    tween.to = decomposeValue(getRelativeValue(to, from), unit);\n    tween.start = previousTween ? previousTween.end : 0;\n    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;\n    tween.easing = parseEasings(tween.easing, tween.duration);\n    tween.isPath = is.pth(tweenValue);\n    tween.isPathTargetInsideSVG = tween.isPath && is.svg(animatable.target);\n    tween.isColor = is.col(tween.from.original);\n    if (tween.isColor) { tween.round = 1; }\n    previousTween = tween;\n    return tween;\n  });\n}\n\n// Tween progress\n\nvar setProgressValue = {\n  css: function (t, p, v) { return t.style[p] = v; },\n  attribute: function (t, p, v) { return t.setAttribute(p, v); },\n  object: function (t, p, v) { return t[p] = v; },\n  transform: function (t, p, v, transforms, manual) {\n    transforms.list.set(p, v);\n    if (p === transforms.last || manual) {\n      var str = '';\n      transforms.list.forEach(function (value, prop) { str += prop + \"(\" + value + \") \"; });\n      t.style.transform = str;\n    }\n  }\n};\n\n// Set Value helper\n\nfunction setTargetsValue(targets, properties) {\n  var animatables = getAnimatables(targets);\n  animatables.forEach(function (animatable) {\n    for (var property in properties) {\n      var value = getFunctionValue(properties[property], animatable);\n      var target = animatable.target;\n      var valueUnit = getUnit(value);\n      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);\n      var unit = valueUnit || getUnit(originalValue);\n      var to = getRelativeValue(validateValue(value, unit), originalValue);\n      var animType = getAnimationType(target, property);\n      setProgressValue[animType](target, property, to, animatable.transforms, true);\n    }\n  });\n}\n\n// Animations\n\nfunction createAnimation(animatable, prop) {\n  var animType = getAnimationType(animatable.target, prop.name);\n  if (animType) {\n    var tweens = normalizeTweens(prop, animatable);\n    var lastTween = tweens[tweens.length - 1];\n    return {\n      type: animType,\n      property: prop.name,\n      animatable: animatable,\n      tweens: tweens,\n      duration: lastTween.end,\n      delay: tweens[0].delay,\n      endDelay: lastTween.endDelay\n    }\n  }\n}\n\nfunction getAnimations(animatables, properties) {\n  return filterArray(flattenArray(animatables.map(function (animatable) {\n    return properties.map(function (prop) {\n      return createAnimation(animatable, prop);\n    });\n  })), function (a) { return !is.und(a); });\n}\n\n// Create Instance\n\nfunction getInstanceTimings(animations, tweenSettings) {\n  var animLength = animations.length;\n  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };\n  var timings = {};\n  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;\n  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;\n  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;\n  return timings;\n}\n\nvar instanceID = 0;\n\nfunction createNewInstance(params) {\n  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n  var properties = getProperties(tweenSettings, params);\n  var animatables = getAnimatables(params.targets);\n  var animations = getAnimations(animatables, properties);\n  var timings = getInstanceTimings(animations, tweenSettings);\n  var id = instanceID;\n  instanceID++;\n  return mergeObjects(instanceSettings, {\n    id: id,\n    children: [],\n    animatables: animatables,\n    animations: animations,\n    duration: timings.duration,\n    delay: timings.delay,\n    endDelay: timings.endDelay\n  });\n}\n\n// Core\n\nvar activeInstances = [];\n\nvar engine = (function () {\n  var raf;\n\n  function play() {\n    if (!raf && (!isDocumentHidden() || !anime.suspendWhenDocumentHidden) && activeInstances.length > 0) {\n      raf = requestAnimationFrame(step);\n    }\n  }\n  function step(t) {\n    // memo on algorithm issue:\n    // dangerous iteration over mutable `activeInstances`\n    // (that collection may be updated from within callbacks of `tick`-ed animation instances)\n    var activeInstancesLength = activeInstances.length;\n    var i = 0;\n    while (i < activeInstancesLength) {\n      var activeInstance = activeInstances[i];\n      if (!activeInstance.paused) {\n        activeInstance.tick(t);\n        i++;\n      } else {\n        activeInstances.splice(i, 1);\n        activeInstancesLength--;\n      }\n    }\n    raf = i > 0 ? requestAnimationFrame(step) : undefined;\n  }\n\n  function handleVisibilityChange() {\n    if (!anime.suspendWhenDocumentHidden) { return; }\n\n    if (isDocumentHidden()) {\n      // suspend ticks\n      raf = cancelAnimationFrame(raf);\n    } else { // is back to active tab\n      // first adjust animations to consider the time that ticks were suspended\n      activeInstances.forEach(\n        function (instance) { return instance ._onDocumentVisibility(); }\n      );\n      engine();\n    }\n  }\n  if (typeof document !== 'undefined') {\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n  }\n\n  return play;\n})();\n\nfunction isDocumentHidden() {\n  return !!document && document.hidden;\n}\n\n// Public Instance\n\nfunction anime(params) {\n  if ( params === void 0 ) params = {};\n\n\n  var startTime = 0, lastTime = 0, now = 0;\n  var children, childrenLength = 0;\n  var resolve = null;\n\n  function makePromise(instance) {\n    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });\n    instance.finished = promise;\n    return promise;\n  }\n\n  var instance = createNewInstance(params);\n  var promise = makePromise(instance);\n\n  function toggleInstanceDirection() {\n    var direction = instance.direction;\n    if (direction !== 'alternate') {\n      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';\n    }\n    instance.reversed = !instance.reversed;\n    children.forEach(function (child) { return child.reversed = instance.reversed; });\n  }\n\n  function adjustTime(time) {\n    return instance.reversed ? instance.duration - time : time;\n  }\n\n  function resetTime() {\n    startTime = 0;\n    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);\n  }\n\n  function seekChild(time, child) {\n    if (child) { child.seek(time - child.timelineOffset); }\n  }\n\n  function syncInstanceChildren(time) {\n    if (!instance.reversePlayback) {\n      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }\n    } else {\n      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }\n    }\n  }\n\n  function setAnimationsProgress(insTime) {\n    var i = 0;\n    var animations = instance.animations;\n    var animationsLength = animations.length;\n    while (i < animationsLength) {\n      var anim = animations[i];\n      var animatable = anim.animatable;\n      var tweens = anim.tweens;\n      var tweenLength = tweens.length - 1;\n      var tween = tweens[tweenLength];\n      // Only check for keyframes if there is more than one tween\n      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }\n      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);\n      var strings = tween.to.strings;\n      var round = tween.round;\n      var numbers = [];\n      var toNumbersLength = tween.to.numbers.length;\n      var progress = (void 0);\n      for (var n = 0; n < toNumbersLength; n++) {\n        var value = (void 0);\n        var toNumber = tween.to.numbers[n];\n        var fromNumber = tween.from.numbers[n] || 0;\n        if (!tween.isPath) {\n          value = fromNumber + (eased * (toNumber - fromNumber));\n        } else {\n          value = getPathProgress(tween.value, eased * toNumber, tween.isPathTargetInsideSVG);\n        }\n        if (round) {\n          if (!(tween.isColor && n > 2)) {\n            value = Math.round(value * round) / round;\n          }\n        }\n        numbers.push(value);\n      }\n      // Manual Array.reduce for better performances\n      var stringsLength = strings.length;\n      if (!stringsLength) {\n        progress = numbers[0];\n      } else {\n        progress = strings[0];\n        for (var s = 0; s < stringsLength; s++) {\n          var a = strings[s];\n          var b = strings[s + 1];\n          var n$1 = numbers[s];\n          if (!isNaN(n$1)) {\n            if (!b) {\n              progress += n$1 + ' ';\n            } else {\n              progress += n$1 + b;\n            }\n          }\n        }\n      }\n      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);\n      anim.currentValue = progress;\n      i++;\n    }\n  }\n\n  function setCallback(cb) {\n    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }\n  }\n\n  function countIteration() {\n    if (instance.remaining && instance.remaining !== true) {\n      instance.remaining--;\n    }\n  }\n\n  function setInstanceProgress(engineTime) {\n    var insDuration = instance.duration;\n    var insDelay = instance.delay;\n    var insEndDelay = insDuration - instance.endDelay;\n    var insTime = adjustTime(engineTime);\n    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);\n    instance.reversePlayback = insTime < instance.currentTime;\n    if (children) { syncInstanceChildren(insTime); }\n    if (!instance.began && instance.currentTime > 0) {\n      instance.began = true;\n      setCallback('begin');\n    }\n    if (!instance.loopBegan && instance.currentTime > 0) {\n      instance.loopBegan = true;\n      setCallback('loopBegin');\n    }\n    if (insTime <= insDelay && instance.currentTime !== 0) {\n      setAnimationsProgress(0);\n    }\n    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {\n      setAnimationsProgress(insDuration);\n    }\n    if (insTime > insDelay && insTime < insEndDelay) {\n      if (!instance.changeBegan) {\n        instance.changeBegan = true;\n        instance.changeCompleted = false;\n        setCallback('changeBegin');\n      }\n      setCallback('change');\n      setAnimationsProgress(insTime);\n    } else {\n      if (instance.changeBegan) {\n        instance.changeCompleted = true;\n        instance.changeBegan = false;\n        setCallback('changeComplete');\n      }\n    }\n    instance.currentTime = minMax(insTime, 0, insDuration);\n    if (instance.began) { setCallback('update'); }\n    if (engineTime >= insDuration) {\n      lastTime = 0;\n      countIteration();\n      if (!instance.remaining) {\n        instance.paused = true;\n        if (!instance.completed) {\n          instance.completed = true;\n          setCallback('loopComplete');\n          setCallback('complete');\n          if (!instance.passThrough && 'Promise' in window) {\n            resolve();\n            promise = makePromise(instance);\n          }\n        }\n      } else {\n        startTime = now;\n        setCallback('loopComplete');\n        instance.loopBegan = false;\n        if (instance.direction === 'alternate') {\n          toggleInstanceDirection();\n        }\n      }\n    }\n  }\n\n  instance.reset = function() {\n    var direction = instance.direction;\n    instance.passThrough = false;\n    instance.currentTime = 0;\n    instance.progress = 0;\n    instance.paused = true;\n    instance.began = false;\n    instance.loopBegan = false;\n    instance.changeBegan = false;\n    instance.completed = false;\n    instance.changeCompleted = false;\n    instance.reversePlayback = false;\n    instance.reversed = direction === 'reverse';\n    instance.remaining = instance.loop;\n    children = instance.children;\n    childrenLength = children.length;\n    for (var i = childrenLength; i--;) { instance.children[i].reset(); }\n    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }\n    setAnimationsProgress(instance.reversed ? instance.duration : 0);\n  };\n\n  // internal method (for engine) to adjust animation timings before restoring engine ticks (rAF)\n  instance._onDocumentVisibility = resetTime;\n\n  // Set Value helper\n\n  instance.set = function(targets, properties) {\n    setTargetsValue(targets, properties);\n    return instance;\n  };\n\n  instance.tick = function(t) {\n    now = t;\n    if (!startTime) { startTime = now; }\n    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);\n  };\n\n  instance.seek = function(time) {\n    setInstanceProgress(adjustTime(time));\n  };\n\n  instance.pause = function() {\n    instance.paused = true;\n    resetTime();\n  };\n\n  instance.play = function() {\n    if (!instance.paused) { return; }\n    if (instance.completed) { instance.reset(); }\n    instance.paused = false;\n    activeInstances.push(instance);\n    resetTime();\n    engine();\n  };\n\n  instance.reverse = function() {\n    toggleInstanceDirection();\n    instance.completed = instance.reversed ? false : true;\n    resetTime();\n  };\n\n  instance.restart = function() {\n    instance.reset();\n    instance.play();\n  };\n\n  instance.remove = function(targets) {\n    var targetsArray = parseTargets(targets);\n    removeTargetsFromInstance(targetsArray, instance);\n  };\n\n  instance.reset();\n\n  if (instance.autoplay) { instance.play(); }\n\n  return instance;\n\n}\n\n// Remove targets from animation\n\nfunction removeTargetsFromAnimations(targetsArray, animations) {\n  for (var a = animations.length; a--;) {\n    if (arrayContains(targetsArray, animations[a].animatable.target)) {\n      animations.splice(a, 1);\n    }\n  }\n}\n\nfunction removeTargetsFromInstance(targetsArray, instance) {\n  var animations = instance.animations;\n  var children = instance.children;\n  removeTargetsFromAnimations(targetsArray, animations);\n  for (var c = children.length; c--;) {\n    var child = children[c];\n    var childAnimations = child.animations;\n    removeTargetsFromAnimations(targetsArray, childAnimations);\n    if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }\n  }\n  if (!animations.length && !children.length) { instance.pause(); }\n}\n\nfunction removeTargetsFromActiveInstances(targets) {\n  var targetsArray = parseTargets(targets);\n  for (var i = activeInstances.length; i--;) {\n    var instance = activeInstances[i];\n    removeTargetsFromInstance(targetsArray, instance);\n  }\n}\n\n// Stagger helpers\n\nfunction stagger(val, params) {\n  if ( params === void 0 ) params = {};\n\n  var direction = params.direction || 'normal';\n  var easing = params.easing ? parseEasings(params.easing) : null;\n  var grid = params.grid;\n  var axis = params.axis;\n  var fromIndex = params.from || 0;\n  var fromFirst = fromIndex === 'first';\n  var fromCenter = fromIndex === 'center';\n  var fromLast = fromIndex === 'last';\n  var isRange = is.arr(val);\n  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);\n  var val2 = isRange ? parseFloat(val[1]) : 0;\n  var unit = getUnit(isRange ? val[1] : val) || 0;\n  var start = params.start || 0 + (isRange ? val1 : 0);\n  var values = [];\n  var maxValue = 0;\n  return function (el, i, t) {\n    if (fromFirst) { fromIndex = 0; }\n    if (fromCenter) { fromIndex = (t - 1) / 2; }\n    if (fromLast) { fromIndex = t - 1; }\n    if (!values.length) {\n      for (var index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(Math.abs(fromIndex - index));\n        } else {\n          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;\n          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;\n          var toX = index%grid[0];\n          var toY = Math.floor(index/grid[0]);\n          var distanceX = fromX - toX;\n          var distanceY = fromY - toY;\n          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') { value = -distanceX; }\n          if (axis === 'y') { value = -distanceY; }\n          values.push(value);\n        }\n        maxValue = Math.max.apply(Math, values);\n      }\n      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }\n      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }\n    }\n    var spacing = isRange ? (val2 - val1) / maxValue : val1;\n    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;\n  }\n}\n\n// Timeline\n\nfunction timeline(params) {\n  if ( params === void 0 ) params = {};\n\n  var tl = anime(params);\n  tl.duration = 0;\n  tl.add = function(instanceParams, timelineOffset) {\n    var tlIndex = activeInstances.indexOf(tl);\n    var children = tl.children;\n    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }\n    function passThrough(ins) { ins.passThrough = true; }\n    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }\n    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));\n    insParams.targets = insParams.targets || params.targets;\n    var tlDuration = tl.duration;\n    insParams.autoplay = false;\n    insParams.direction = tl.direction;\n    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);\n    passThrough(tl);\n    tl.seek(insParams.timelineOffset);\n    var ins = anime(insParams);\n    passThrough(ins);\n    children.push(ins);\n    var timings = getInstanceTimings(children, params);\n    tl.delay = timings.delay;\n    tl.endDelay = timings.endDelay;\n    tl.duration = timings.duration;\n    tl.seek(0);\n    tl.reset();\n    if (tl.autoplay) { tl.play(); }\n    return tl;\n  };\n  return tl;\n}\n\nanime.version = '3.2.1';\nanime.speed = 1;\n// TODO:#review: naming, documentation\nanime.suspendWhenDocumentHidden = true;\nanime.running = activeInstances;\nanime.remove = removeTargetsFromActiveInstances;\nanime.get = getOriginalTargetValue;\nanime.set = setTargetsValue;\nanime.convertPx = convertPxToUnit;\nanime.path = getPath;\nanime.setDashoffset = setDashoffset;\nanime.stagger = stagger;\nanime.timeline = timeline;\nanime.easing = parseEasings;\nanime.penner = penner;\nanime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (anime);\n\n\n//# sourceURL=webpack:///./node_modules/animejs/lib/anime.es.js?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/request */ \"esri/request\"), __webpack_require__(/*! ./ts/App */ \"./src/ts/App.tsx\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, request_1, App_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    request_1 = tslib_1.__importDefault(request_1);\r\n    App_1 = tslib_1.__importDefault(App_1);\r\n    // See DEPLOYMENT.md for customization or deploying your own version of this app.\r\n    var params = {\r\n        settings: \"./js/settings.json\",\r\n    };\r\n    var queryParams = document.location.search.substr(1);\r\n    queryParams.split(\"&\").forEach(function (pair) {\r\n        var item = pair.split(\"=\");\r\n        params[item[0]] = decodeURIComponent(item[1]);\r\n    });\r\n    /**\r\n     * Load settings and initialize application\r\n     */\r\n    request_1.default(params.settings).then(function (settings) {\r\n        var app = new App_1.default(settings.data);\r\n        app.container = \"app\";\r\n    }).catch(console.error);\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/index.ts?");

/***/ }),

/***/ "./src/ts/App.tsx":
/*!************************!*\
  !*** ./src/ts/App.tsx ***!
  \************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/widgets/support/widget */ \"esri/widgets/support/widget\"), __webpack_require__(/*! ./PlanningScene */ \"./src/ts/PlanningScene.tsx\"), __webpack_require__(/*! ./Timeline */ \"./src/ts/Timeline.tsx\"), __webpack_require__(/*! ./widget/CreateArea */ \"./src/ts/widget/CreateArea.tsx\"), __webpack_require__(/*! ./widget/CreateBuilding */ \"./src/ts/widget/CreateBuilding.tsx\"), __webpack_require__(/*! ./widget/CreatePath */ \"./src/ts/widget/CreatePath.tsx\"), __webpack_require__(/*! ./widget/GlTFWidget */ \"./src/ts/widget/GlTFWidget.tsx\"), __webpack_require__(/*! ./widget/SymbolGallery */ \"./src/ts/widget/SymbolGallery.tsx\"), __webpack_require__(/*! ./widget/WidgetBase */ \"./src/ts/widget/WidgetBase.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, decorators_1, widget_1, PlanningScene_1, Timeline_1, CreateArea_1, CreateBuilding_1, CreatePath_1, GlTFWidget_1, SymbolGallery_1, WidgetBase_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    PlanningScene_1 = tslib_1.__importDefault(PlanningScene_1);\r\n    Timeline_1 = tslib_1.__importDefault(Timeline_1);\r\n    CreateArea_1 = tslib_1.__importDefault(CreateArea_1);\r\n    CreateBuilding_1 = tslib_1.__importDefault(CreateBuilding_1);\r\n    CreatePath_1 = tslib_1.__importDefault(CreatePath_1);\r\n    GlTFWidget_1 = tslib_1.__importDefault(GlTFWidget_1);\r\n    SymbolGallery_1 = tslib_1.__importStar(SymbolGallery_1);\r\n    WidgetBase_1 = tslib_1.__importDefault(WidgetBase_1);\r\n    var App = /** @class */ (function (_super) {\r\n        tslib_1.__extends(App, _super);\r\n        function App(settings) {\r\n            var _this = _super.call(this) || this;\r\n            _this.settings = settings;\r\n            _this.timeline = new Timeline_1.default({ app: _this });\r\n            _this.createArea = new CreateArea_1.default({ app: _this });\r\n            _this.createPath = new CreatePath_1.default({ app: _this });\r\n            _this.createBuilding = new CreateBuilding_1.default({ app: _this });\r\n            _this.symbolGallery = new SymbolGallery_1.default({ app: _this });\r\n            _this.glTFWidget = new GlTFWidget_1.default({ app: _this });\r\n            _this.selectedWidget = null;\r\n            _this.drawWidgets = [_this.createArea, _this.createPath, _this.createBuilding, _this.symbolGallery, _this.glTFWidget];\r\n            _this.mainMenuEntries = [];\r\n            _this.menuButtons = [];\r\n            _this.scene = new PlanningScene_1.default(_this);\r\n            return _this;\r\n        }\r\n        Object.defineProperty(App.prototype, \"currentOperation\", {\r\n            get: function () {\r\n                return this.operation;\r\n            },\r\n            set: function (operation) {\r\n                if (this.operation) {\r\n                    this.operation.cancel();\r\n                }\r\n                this.operation = operation;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        App.prototype.postInitialize = function () {\r\n            var _this = this;\r\n            var view = this.scene.view;\r\n            view.on(\"click\", function (event) {\r\n                if (!_this.currentOperation) {\r\n                    view.hitTest(event)\r\n                        .then(function (response) {\r\n                        // check user clicked on a graphic, in which case we try to pass it to a SketchViewModel\r\n                        response.results.some(function (result) {\r\n                            var graphic = result.graphic;\r\n                            if (graphic && graphic.geometry) {\r\n                                return _this.updateGraphic(graphic);\r\n                            }\r\n                            return false;\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n            this.mainMenuEntries.push({\r\n                label: \"Ground\",\r\n                iconName: \"fas fa-layer-group\",\r\n                onClick: this.showWidget.bind(this, this.createArea),\r\n            });\r\n            this.mainMenuEntries.push({\r\n                label: \"Paths\",\r\n                iconName: \"fas fa-road\",\r\n                onClick: this.showWidget.bind(this, this.createPath),\r\n            });\r\n            this.mainMenuEntries.push({\r\n                label: \"Buildings\",\r\n                iconName: \"fas fa-building\",\r\n                onClick: this.showWidget.bind(this, this.createBuilding),\r\n            });\r\n            this.mainMenuEntries.push({\r\n                label: \"Icons\",\r\n                iconName: \"fas fa-map-marker-alt\",\r\n                onClick: this.showSymbolGallery.bind(this, SymbolGallery_1.SymbolGroupId.Icons),\r\n            });\r\n            this.mainMenuEntries.push({\r\n                label: \"Trees\",\r\n                iconName: \"fas fa-tree\",\r\n                onClick: this.showSymbolGallery.bind(this, SymbolGallery_1.SymbolGroupId.Trees),\r\n            });\r\n            this.mainMenuEntries.push({\r\n                label: \"Vehicles\",\r\n                iconName: \"fas fa-car\",\r\n                onClick: this.showSymbolGallery.bind(this, SymbolGallery_1.SymbolGroupId.Vehicles),\r\n            });\r\n            this.mainMenuEntries.push({\r\n                label: \"glTF\",\r\n                iconName: \"fas fa-cloud-download-alt\",\r\n                onClick: function (element) {\r\n                    _this.glTFWidget.startImport();\r\n                    _this.showWidget(_this.glTFWidget, element);\r\n                },\r\n            });\r\n            this.scene.map.when(function () {\r\n                _this.thumbnailUrl = _this.scene.map.portalItem.getThumbnailUrl(400);\r\n            });\r\n            // Leave a reference of the view on the window for debugging\r\n            window.app = this;\r\n        };\r\n        App.prototype.render = function () {\r\n            var _this = this;\r\n            var planningAreaName = this.settings.planningAreaName;\r\n            var thumbnail = this.thumbnailUrl ?\r\n                widget_1.tsx(\"img\", { class: \"card-wide-image\", src: this.thumbnailUrl, alt: planningAreaName }) :\r\n                null;\r\n            return (widget_1.tsx(\"div\", null,\r\n                widget_1.tsx(\"div\", { id: \"scene\", afterCreate: this.attachScene.bind(this) }),\r\n                widget_1.tsx(\"div\", { class: \"box\" },\r\n                    widget_1.tsx(\"div\", { class: \"top\" },\r\n                        widget_1.tsx(\"div\", { afterCreate: this.attachTimeline.bind(this) })),\r\n                    widget_1.tsx(\"div\", { class: \"content\" },\r\n                        widget_1.tsx(\"div\", { class: \"hide\", afterCreate: this.attachWidget.bind(this, this.createArea) }),\r\n                        widget_1.tsx(\"div\", { class: \"hide\", afterCreate: this.attachWidget.bind(this, this.createPath) }),\r\n                        widget_1.tsx(\"div\", { class: \"hide\", afterCreate: this.attachWidget.bind(this, this.createBuilding) }),\r\n                        widget_1.tsx(\"div\", { class: \"hide\", afterCreate: this.attachWidget.bind(this, this.symbolGallery) }),\r\n                        widget_1.tsx(\"div\", { class: \"hide\", afterCreate: this.attachWidget.bind(this, this.glTFWidget) })),\r\n                    widget_1.tsx(\"div\", { class: \"bottom\" },\r\n                        widget_1.tsx(\"div\", { class: \"menu\" },\r\n                            widget_1.tsx(\"div\", { class: \"menu-item\" },\r\n                                widget_1.tsx(\"button\", { class: \"btn btn-large\", onclick: function () { _this.reset(); _this.timeline.showIntro(); } }, \"NEW PLAN\")),\r\n                            this.mainMenuEntries.map(function (entry) { return (widget_1.tsx(\"div\", { class: \"menu-item\" },\r\n                                widget_1.tsx(\"button\", { class: \"btn\", afterCreate: _this.attachWidgetButton.bind(_this, entry) },\r\n                                    widget_1.tsx(\"span\", { class: \"font-size-3 \" + entry.iconName }),\r\n                                    widget_1.tsx(\"br\", null),\r\n                                    entry.label))); }),\r\n                            widget_1.tsx(\"div\", { class: \"menu-item\" },\r\n                                widget_1.tsx(\"button\", { class: \"btn btn-large\", onclick: function () { _this.reset(); _this.timeline.takeScreenshot(); } }, \"SUBMIT PLAN\"))))),\r\n                widget_1.tsx(\"div\", { id: \"overlay\", class: \"center\" }),\r\n                widget_1.tsx(\"div\", { id: \"loadingIndicator\", class: \"center hide\", afterCreate: function () { return _this.toggleLoadingIndicator(true); } },\r\n                    widget_1.tsx(\"div\", { class: \"loader-bars\" }),\r\n                    widget_1.tsx(\"div\", { class: \"loader-text text-white\", id: \"loadingIndicatorText\" })),\r\n                widget_1.tsx(\"div\", { id: \"intro\", class: \"center\" },\r\n                    widget_1.tsx(\"div\", { class: \"column-17\" },\r\n                        widget_1.tsx(\"div\", { class: \"card card-wide\" },\r\n                            widget_1.tsx(\"figure\", { class: \"card-wide-image-wrap phone-hide\" },\r\n                                thumbnail,\r\n                                widget_1.tsx(\"div\", { class: \"card-image-caption\" }, planningAreaName)),\r\n                            widget_1.tsx(\"div\", { class: \"card-content\" },\r\n                                widget_1.tsx(\"h4\", { class: \"trailer-half\" }, \"Participatory Planning\"),\r\n                                widget_1.tsx(\"p\", { class: \"font-size--1 trailer-half\" },\r\n                                    widget_1.tsx(\"ul\", null,\r\n                                        widget_1.tsx(\"li\", null,\r\n                                            \"When creating shapes, either double click or press \",\r\n                                            widget_1.tsx(\"code\", null, \"C\"),\r\n                                            \" to complete.\"),\r\n                                        widget_1.tsx(\"li\", null,\r\n                                            \"Press \",\r\n                                            widget_1.tsx(\"code\", null, \"Del\"),\r\n                                            \" or \",\r\n                                            widget_1.tsx(\"code\", null, \"Backspace\"),\r\n                                            \" to remove a selected object.\"),\r\n                                        widget_1.tsx(\"li\", null,\r\n                                            \"Press \",\r\n                                            widget_1.tsx(\"code\", null, \"Escape\"),\r\n                                            \" to revert a current editing.\"))),\r\n                                widget_1.tsx(\"div\", { menu: true },\r\n                                    widget_1.tsx(\"button\", { class: \"menu-item btn\", onclick: function () { return _this.timeline.playIntroAnimation(); } }, \"Start Planning\"),\r\n                                    widget_1.tsx(\"button\", { class: \"menu-item btn btn-transparent\", onclick: function () { return _this.timeline.startPlanning(); } }, \"Skip Animation\")))))),\r\n                widget_1.tsx(\"div\", { id: \"screenshot\", class: \"center hide\" },\r\n                    widget_1.tsx(\"div\", null,\r\n                        widget_1.tsx(\"div\", { class: \"center\" },\r\n                            widget_1.tsx(\"button\", { class: \"btn btn-large btn-white\", onclick: function () { return _this.timeline.startPlanning(); } },\r\n                                widget_1.tsx(\"span\", { class: \"font-size-3 fas fa-arrow-left\" }),\r\n                                widget_1.tsx(\"br\", null),\r\n                                \"Back\"))),\r\n                    widget_1.tsx(\"div\", null,\r\n                        widget_1.tsx(\"div\", { class: \"center\" },\r\n                            widget_1.tsx(\"canvas\", { id: \"screenshotCanvas\" }))),\r\n                    widget_1.tsx(\"div\", null,\r\n                        widget_1.tsx(\"div\", { class: \"center\" },\r\n                            widget_1.tsx(\"button\", { class: \"btn btn-large btn-white\", onclick: function () { return _this.timeline.downloadScreenshot(); } },\r\n                                widget_1.tsx(\"span\", { class: \"font-size-3 fas fa-share-square\" }),\r\n                                widget_1.tsx(\"br\", null),\r\n                                \"Share\"))))));\r\n        };\r\n        App.prototype.attachScene = function (element) {\r\n            this.scene.container = element;\r\n        };\r\n        App.prototype.attachTimeline = function (element) {\r\n            this.timeline.container = element;\r\n        };\r\n        App.prototype.attachWidget = function (menu, element) {\r\n            menu.container = element;\r\n        };\r\n        App.prototype.attachWidgetButton = function (menu, element) {\r\n            this.menuButtons.push(element);\r\n            element.onclick = function () {\r\n                menu.onClick(element);\r\n            };\r\n        };\r\n        App.prototype.reset = function () {\r\n            this.hideWidget();\r\n            // Cancel any ongoing operation\r\n            if (this.currentOperation) {\r\n                this.currentOperation.cancel();\r\n            }\r\n        };\r\n        App.prototype.hideWidget = function () {\r\n            this.menuButtons.forEach(function (button) { return button.classList.remove(\"active\"); });\r\n            if (this.selectedWidget) {\r\n                this.selectedWidget.container.classList.add(\"hide\");\r\n            }\r\n        };\r\n        App.prototype.showWidget = function (widget, element) {\r\n            this.menuButtons.forEach(function (button) { return button.classList.remove(\"active\"); });\r\n            if (this.selectedWidget) {\r\n                this.hideWidget();\r\n                if (this.selectedWidget === widget) {\r\n                    this.selectedWidget = null;\r\n                    return;\r\n                }\r\n            }\r\n            this.selectedWidget = widget;\r\n            element.classList.add(\"active\");\r\n            this.selectedWidget.container.classList.remove(\"hide\");\r\n        };\r\n        App.prototype.showSymbolGallery = function (groupId, element) {\r\n            this.menuButtons.forEach(function (button) { return button.classList.remove(\"active\"); });\r\n            if (this.symbolGallery.selectedGroupId !== groupId) {\r\n                this.symbolGallery.selectedGroupId = groupId;\r\n                if (this.selectedWidget === this.symbolGallery) {\r\n                    element.classList.add(\"active\");\r\n                    return;\r\n                }\r\n            }\r\n            this.showWidget(this.symbolGallery, element);\r\n        };\r\n        App.prototype.updateGraphic = function (graphic) {\r\n            var layer = graphic.layer;\r\n            if (layer) {\r\n                return this.drawWidgets.some(function (widget) {\r\n                    if (widget.layer === layer) {\r\n                        widget.updateGraphic(graphic);\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n            return false;\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.aliasOf(\"scene.map.portalItem.title\")\r\n        ], App.prototype, \"title\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], App.prototype, \"thumbnailUrl\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], App.prototype, \"scene\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], App.prototype, \"selectedWidget\", void 0);\r\n        App = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.widgets.webmapview\")\r\n        ], App);\r\n        return App;\r\n    }(WidgetBase_1.default));\r\n    exports[\"default\"] = App;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/App.tsx?");

/***/ }),

/***/ "./src/ts/PlanningScene.tsx":
/*!**********************************!*\
  !*** ./src/ts/PlanningScene.tsx ***!
  \**********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/core/watchUtils */ \"esri/core/watchUtils\"), __webpack_require__(/*! esri/geometry/geometryEngine */ \"esri/geometry/geometryEngine\"), __webpack_require__(/*! esri/geometry/Polygon */ \"esri/geometry/Polygon\"), __webpack_require__(/*! esri/geometry/SpatialReference */ \"esri/geometry/SpatialReference\"), __webpack_require__(/*! esri/Graphic */ \"esri/Graphic\"), __webpack_require__(/*! esri/layers/GraphicsLayer */ \"esri/layers/GraphicsLayer\"), __webpack_require__(/*! esri/renderers */ \"esri/renderers\"), __webpack_require__(/*! esri/views/layers/support/FeatureFilter */ \"esri/views/layers/support/FeatureFilter\"), __webpack_require__(/*! esri/views/SceneView */ \"esri/views/SceneView\"), __webpack_require__(/*! esri/WebScene */ \"esri/WebScene\"), __webpack_require__(/*! esri/widgets/support/widget */ \"esri/widgets/support/widget\"), __webpack_require__(/*! ./support/geometry */ \"./src/ts/support/geometry.ts\"), __webpack_require__(/*! ./widget/WidgetBase */ \"./src/ts/widget/WidgetBase.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, decorators_1, watchUtils_1, geometryEngine_1, Polygon_1, SpatialReference_1, Graphic_1, GraphicsLayer_1, renderers_1, FeatureFilter_1, SceneView_1, WebScene_1, widget_1, geometry_1, WidgetBase_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.QUALITY = void 0;\r\n    geometryEngine_1 = tslib_1.__importDefault(geometryEngine_1);\r\n    Polygon_1 = tslib_1.__importDefault(Polygon_1);\r\n    SpatialReference_1 = tslib_1.__importDefault(SpatialReference_1);\r\n    Graphic_1 = tslib_1.__importDefault(Graphic_1);\r\n    GraphicsLayer_1 = tslib_1.__importDefault(GraphicsLayer_1);\r\n    FeatureFilter_1 = tslib_1.__importDefault(FeatureFilter_1);\r\n    SceneView_1 = tslib_1.__importDefault(SceneView_1);\r\n    WebScene_1 = tslib_1.__importDefault(WebScene_1);\r\n    WidgetBase_1 = tslib_1.__importDefault(WidgetBase_1);\r\n    // One of low, medium, high\r\n    exports.QUALITY = \"medium\";\r\n    var PlanningScene = /** @class */ (function (_super) {\r\n        tslib_1.__extends(PlanningScene, _super);\r\n        function PlanningScene(app) {\r\n            var _this = _super.call(this, { app: app }) || this;\r\n            _this.sketchLayer = new GraphicsLayer_1.default({\r\n                elevationInfo: {\r\n                    mode: \"on-the-ground\",\r\n                },\r\n            });\r\n            _this.sceneLayerRenderer = new renderers_1.SimpleRenderer({\r\n                symbol: {\r\n                    type: \"mesh-3d\",\r\n                    symbolLayers: [{\r\n                            type: \"fill\",\r\n                            material: {\r\n                                color: \"white\",\r\n                            },\r\n                            edges: {\r\n                                type: \"solid\",\r\n                                color: [150, 150, 150],\r\n                                size: .5,\r\n                            },\r\n                        }],\r\n                },\r\n            });\r\n            _this.map = new WebScene_1.default({\r\n                portalItem: {\r\n                    id: app.settings.webSceneId,\r\n                },\r\n            });\r\n            _this.view = new SceneView_1.default({\r\n                map: _this.map,\r\n                qualityProfile: exports.QUALITY,\r\n            });\r\n            return _this;\r\n        }\r\n        PlanningScene.prototype.postInitialize = function () {\r\n            var _this = this;\r\n            // Create global view reference\r\n            window.view = this.view;\r\n            this.maskPolygon = new Polygon_1.default({\r\n                rings: [this.app.settings.planningArea],\r\n                spatialReference: SpatialReference_1.default.WebMercator,\r\n            });\r\n            this.sceneLayerFilter = new FeatureFilter_1.default({\r\n                spatialRelationship: \"disjoint\",\r\n                geometry: this.maskPolygon,\r\n            });\r\n            this.boundingPolygonGraphic = new Graphic_1.default({\r\n                geometry: geometry_1.computeBoundingPolygon(this.maskPolygon),\r\n                symbol: {\r\n                    type: \"simple-fill\",\r\n                    color: [0, 0, 0, 0.15],\r\n                    outline: {\r\n                        width: 0,\r\n                    },\r\n                },\r\n            });\r\n            this.map.when(function () {\r\n                _this.map.add(_this.sketchLayer);\r\n                _this.sketchLayer.add(_this.boundingPolygonGraphic);\r\n                _this.sceneLayer = _this.map.layers.find(function (layer) { return layer.type === \"scene\"; });\r\n                _this.sceneLayer.renderer = _this.sceneLayerRenderer;\r\n                _this.sceneLayer.popupEnabled = false;\r\n                _this.view.whenLayerView(_this.sceneLayer).then(function (lv) {\r\n                    _this.sceneLayerView = lv;\r\n                });\r\n            });\r\n        };\r\n        PlanningScene.prototype.render = function () {\r\n            return (widget_1.tsx(\"div\", null,\r\n                widget_1.tsx(\"div\", { id: \"sceneView\", bind: this, afterCreate: this.attachSceneView })));\r\n        };\r\n        PlanningScene.prototype.clear = function () {\r\n            this.drawLayers().forEach(function (layer) { return layer.removeAll(); });\r\n        };\r\n        PlanningScene.prototype.showMaskedBuildings = function (color) {\r\n            if (color && color.a !== 0) {\r\n                // Show masked buildings with provided color, all other buildings are white\r\n                this.boundingPolygonGraphic.visible = false;\r\n                this.sceneLayerView.set(\"filter\", null);\r\n                this.drawLayers().forEach(function (layer) { return layer.visible = false; });\r\n            }\r\n            else {\r\n                this.sceneLayerView.filter = this.sceneLayerFilter;\r\n                this.drawLayers().forEach(function (layer) { return layer.visible = true; });\r\n                this.boundingPolygonGraphic.visible = true;\r\n            }\r\n            this.sceneLayer.visible = true;\r\n        };\r\n        PlanningScene.prototype.showTexturedBuildings = function () {\r\n            this.drawLayers().forEach(function (layer) { return layer.visible = false; });\r\n            this.sceneLayer.visible = true;\r\n            this.sceneLayerView.set(\"filter\", null);\r\n            this.boundingPolygonGraphic.symbol = {\r\n                type: \"simple-fill\",\r\n                color: [0, 0, 0, 0],\r\n                outline: {\r\n                    width: 0,\r\n                },\r\n            };\r\n        };\r\n        PlanningScene.prototype.whenNotUpdating = function () {\r\n            return watchUtils_1.whenNotOnce(this.view, \"updating\");\r\n        };\r\n        PlanningScene.prototype.drawLayers = function () {\r\n            var _this = this;\r\n            return this.map.layers.filter(function (layer) {\r\n                if (layer instanceof GraphicsLayer_1.default) {\r\n                    return layer !== _this.sketchLayer;\r\n                }\r\n                return false;\r\n            });\r\n        };\r\n        PlanningScene.prototype.attachSceneView = function (sceneViewDiv) {\r\n            this.view.container = sceneViewDiv;\r\n        };\r\n        PlanningScene.prototype.getExtrudedHeight = function (point, graphic) {\r\n            if (graphic.symbol.type === \"polygon-3d\" && geometryEngine_1.default.contains(graphic.geometry, point)) {\r\n                var layers = graphic.get(\"symbol.symbolLayers\");\r\n                var extrusion = layers && layers.getItemAt(0).size;\r\n                return extrusion;\r\n            }\r\n            return 0;\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], PlanningScene.prototype, \"map\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], PlanningScene.prototype, \"view\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], PlanningScene.prototype, \"sketchLayer\", void 0);\r\n        PlanningScene = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.widgets.webmapview\")\r\n        ], PlanningScene);\r\n        return PlanningScene;\r\n    }(WidgetBase_1.default));\r\n    exports[\"default\"] = PlanningScene;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/PlanningScene.tsx?");

/***/ }),

/***/ "./src/ts/Timeline.tsx":
/*!*****************************!*\
  !*** ./src/ts/Timeline.tsx ***!
  \*****************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! animejs */ \"./node_modules/animejs/lib/anime.es.js\"), __webpack_require__(/*! esri/Color */ \"esri/Color\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/geometry/Polyline */ \"esri/geometry/Polyline\"), __webpack_require__(/*! esri/geometry/SpatialReference */ \"esri/geometry/SpatialReference\"), __webpack_require__(/*! esri/Graphic */ \"esri/Graphic\"), __webpack_require__(/*! esri/layers/VectorTileLayer */ \"esri/layers/VectorTileLayer\"), __webpack_require__(/*! esri/widgets/support/widget */ \"esri/widgets/support/widget\"), __webpack_require__(/*! ./widget/WidgetBase */ \"./src/ts/widget/WidgetBase.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, animejs_1, Color_1, decorators_1, Polyline_1, SpatialReference_1, Graphic_1, VectorTileLayer_1, widget_1, WidgetBase_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.MASK_ANIMATION_DURATION = exports.AREA_ANIMATION_DURATION = void 0;\r\n    animejs_1 = tslib_1.__importDefault(animejs_1);\r\n    Color_1 = tslib_1.__importDefault(Color_1);\r\n    Polyline_1 = tslib_1.__importDefault(Polyline_1);\r\n    SpatialReference_1 = tslib_1.__importDefault(SpatialReference_1);\r\n    Graphic_1 = tslib_1.__importDefault(Graphic_1);\r\n    VectorTileLayer_1 = tslib_1.__importDefault(VectorTileLayer_1);\r\n    WidgetBase_1 = tslib_1.__importDefault(WidgetBase_1);\r\n    exports.AREA_ANIMATION_DURATION = 2000;\r\n    exports.MASK_ANIMATION_DURATION = 1000;\r\n    var maskPolygonSymbol = function (color) {\r\n        return {\r\n            type: \"simple-fill\",\r\n            color: color,\r\n            outline: {\r\n                width: 0,\r\n            },\r\n        };\r\n    };\r\n    var EMPTY_POLYLINE = new Polyline_1.default({\r\n        paths: [[[0, 0], [1, 1]]],\r\n        spatialReference: SpatialReference_1.default.WebMercator,\r\n    });\r\n    var Timeline = /** @class */ (function (_super) {\r\n        tslib_1.__extends(Timeline, _super);\r\n        function Timeline() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.vectorTileLayer = new VectorTileLayer_1.default({\r\n                portalItem: {\r\n                    id: \"5cf1abb43c25482e8a9e373953498999\",\r\n                },\r\n                visible: false,\r\n            });\r\n            _this.maskColor = new Color_1.default([226, 119, 40]);\r\n            _this.maskPolyline = new Graphic_1.default({\r\n                geometry: EMPTY_POLYLINE,\r\n                symbol: {\r\n                    type: \"line-3d\",\r\n                    symbolLayers: [{\r\n                            type: \"line\",\r\n                            size: 6,\r\n                            material: { color: _this.maskColor },\r\n                        }],\r\n                },\r\n            });\r\n            _this.showIntroDialog = true;\r\n            return _this;\r\n        }\r\n        Timeline.prototype.postInitialize = function () {\r\n            var _this = this;\r\n            var queryParams = document.location.search.substr(1);\r\n            this.showIntroDialog = queryParams !== \"skipTutorial\";\r\n            var scene = this.app.scene;\r\n            var map = scene.map;\r\n            map.when(function () {\r\n                _this.initialViewpoint = map.initialViewProperties.viewpoint;\r\n                _this.drawViewpoint = _this.slides.length ? _this.slides.getItemAt(0).viewpoint : _this.initialViewpoint;\r\n                map.layers.add(_this.vectorTileLayer);\r\n                var color = _this.maskColor.clone();\r\n                color.a = 0;\r\n                _this.maskPolygon = new Graphic_1.default({\r\n                    symbol: maskPolygonSymbol(color),\r\n                    geometry: scene.maskPolygon,\r\n                });\r\n                scene.sketchLayer.add(_this.maskPolyline);\r\n                scene.sketchLayer.add(_this.maskPolygon);\r\n                map.ground.surfaceColor = new Color_1.default(\"#f0f0f0\");\r\n            });\r\n            this.toggleElement(\"screenshot\", false);\r\n        };\r\n        Timeline.prototype.render = function () {\r\n            var _this = this;\r\n            var slides = this.slides.toArray();\r\n            return (widget_1.tsx(\"div\", { class: \"timeline\" },\r\n                this.showIntroDialog ? (widget_1.tsx(\"div\", null)) : (widget_1.tsx(\"div\", { class: \"menu menu-left phone-hide\" },\r\n                    widget_1.tsx(\"div\", { class: \"menu-item\" },\r\n                        widget_1.tsx(\"button\", { class: \"btn btn-large\", onclick: this.playIntroAnimation.bind(this) }, \"Intro\")))),\r\n                widget_1.tsx(\"div\", { class: \"menu phone-hide\" }, slides.map(function (slide) { return (widget_1.tsx(\"div\", { class: \"menu-item\", key: slide.id },\r\n                    widget_1.tsx(\"button\", { class: \"btn btn-large\", onclick: function () { return _this.goTo(slide.viewpoint); } }, slide.title.text))); }))));\r\n        };\r\n        Timeline.prototype.showIntro = function () {\r\n            var _this = this;\r\n            this.toggleLoadingIndicator(true);\r\n            this.app.scene.showMaskedBuildings(\"white\");\r\n            this.app.scene.clear();\r\n            return this.goTo(this.initialViewpoint)\r\n                .then(function () {\r\n                _this.toggleBasemap(true);\r\n                if (_this.showIntroDialog) {\r\n                    _this.toggleElement(\"intro\", true);\r\n                }\r\n                else {\r\n                    _this.toggleElement(\"intro\", false);\r\n                    _this.toggleLoadingIndicator(false);\r\n                }\r\n            });\r\n        };\r\n        Timeline.prototype.playIntroAnimation = function () {\r\n            var _this = this;\r\n            this.toggleElement(\"intro\", false);\r\n            return this\r\n                .app.scene.whenNotUpdating()\r\n                .then(function () {\r\n                _this.toggleOverlay(false);\r\n                _this.toggleLoadingIndicator(false);\r\n            })\r\n                .then(function () { return _this.goTo(_this.maskPolygon, 1500); })\r\n                .then(function () { return _this.animateArea(); })\r\n                .then(function () { return _this.animateMask(); })\r\n                .then(function () { return _this.goTo(_this.drawViewpoint); })\r\n                .then(function () { return _this.toggleBasemap(false); });\r\n        };\r\n        Timeline.prototype.startPlanning = function () {\r\n            var _this = this;\r\n            this.toggleElement(\"intro\", false);\r\n            return this\r\n                .app.scene.whenNotUpdating()\r\n                .then(function () {\r\n                _this.toggleOverlay(false);\r\n                _this.toggleLoadingIndicator(false);\r\n                _this.toggleElement(\"intro\", false);\r\n                _this.toggleElement(\"screenshot\", false);\r\n                // Not strickly serial, simply to speed up scene getting ready to edit\r\n                _this.goTo(_this.drawViewpoint);\r\n                _this.toggleBasemap(false);\r\n                _this.app.scene.showMaskedBuildings();\r\n            });\r\n        };\r\n        Timeline.prototype.takeScreenshot = function () {\r\n            var _this = this;\r\n            var view = this.app.scene.view;\r\n            var width = Math.min(this.app.scene.view.width, this.app.scene.view.height);\r\n            var options = { format: \"png\", width: width * 0.8 };\r\n            this.toggleLoadingIndicator(true, \"Capturing Scene\");\r\n            setTimeout(function () {\r\n                _this.app.scene.whenNotUpdating()\r\n                    .then(function () { return view.takeScreenshot(options); })\r\n                    .then(function (after) {\r\n                    _this.app.scene.showTexturedBuildings();\r\n                    _this.toggleBasemap(true);\r\n                    setTimeout(function () {\r\n                        _this.app.scene.whenNotUpdating()\r\n                            .then(function () { return view.takeScreenshot(options); })\r\n                            .then(function (before) {\r\n                            _this.showScreenshot(before, after);\r\n                            _this.app.scene.showMaskedBuildings();\r\n                            _this.toggleBasemap(false);\r\n                        });\r\n                    }, 100);\r\n                });\r\n            }, 100);\r\n        };\r\n        Timeline.prototype.downloadScreenshot = function () {\r\n            var filename = \"ParticipatoryPlanning.png\";\r\n            var canvas = document.getElementById(\"screenshotCanvas\");\r\n            var dataUrl = canvas.toDataURL(\"image/png\");\r\n            // Taken from https://developers.arcgis.com/javascript/latest/sample-code/sceneview-screenshot/index.html\r\n            // the download is handled differently in Microsoft browsers\r\n            // because the download attribute for <a> elements is not supported\r\n            if (!window.navigator.msSaveOrOpenBlob) {\r\n                // in browsers that support the download attribute\r\n                // a link is created and a programmatic click will trigger the download\r\n                var element = document.createElement(\"a\");\r\n                element.setAttribute(\"href\", dataUrl);\r\n                element.setAttribute(\"download\", filename);\r\n                element.style.display = \"none\";\r\n                document.body.appendChild(element);\r\n                element.click();\r\n                document.body.removeChild(element);\r\n            }\r\n            else {\r\n                // for MS browsers convert dataUrl to Blob\r\n                var byteString = atob(dataUrl.split(\",\")[1]);\r\n                var mimeString = dataUrl\r\n                    .split(\",\")[0]\r\n                    .split(\":\")[1]\r\n                    .split(\";\")[0];\r\n                var ab = new ArrayBuffer(byteString.length);\r\n                var ia = new Uint8Array(ab);\r\n                for (var i = 0; i < byteString.length; i++) {\r\n                    ia[i] = byteString.charCodeAt(i);\r\n                }\r\n                var blob = new Blob([ab], { type: mimeString });\r\n                // download file\r\n                window.navigator.msSaveOrOpenBlob(blob, filename);\r\n            }\r\n        };\r\n        Timeline.prototype.showScreenshot = function (before, after) {\r\n            var canvas = document.getElementById(\"screenshotCanvas\");\r\n            var context = canvas.getContext(\"2d\");\r\n            var height = canvas.width = canvas.height = Math.min(before.data.width, 2 * before.data.height);\r\n            var x = -(before.data.width - height) / 2;\r\n            var dirtyY = (before.data.height - height / 2) / 2;\r\n            context.putImageData(before.data, x, -dirtyY, 0, dirtyY, before.data.width, height / 2);\r\n            context.putImageData(after.data, x, height / 2 - dirtyY, 0, dirtyY, after.data.width, height / 2);\r\n            context.font = \"bold 50px Helvetica\";\r\n            context.fillStyle = \"white\";\r\n            context.fillText(\"Now\", 15, height / 2 - 22);\r\n            context.fillText(\"My Plan\", 15, height - 22);\r\n            this.toggleLoadingIndicator(false);\r\n            this.toggleOverlay(true, 0.9);\r\n            this.toggleElement(\"screenshot\", true);\r\n        };\r\n        Timeline.prototype.goTo = function (target, duration) {\r\n            var _this = this;\r\n            if (duration === void 0) { duration = 800; }\r\n            var view = this.app.scene.view;\r\n            return view.goTo(target, { duration: duration }).then(function () {\r\n                // Wait for all layers to update after applying a new slide\r\n                return _this.app.scene.whenNotUpdating();\r\n                // Catching any exceptions in case animation gets canceled\r\n            }).catch(console.log);\r\n        };\r\n        Timeline.prototype.animateArea = function () {\r\n            var _this = this;\r\n            var planningArea = this.app.settings.planningArea;\r\n            var start = planningArea[0];\r\n            var waypoints = planningArea.slice(1);\r\n            waypoints.push(start);\r\n            var durations = [];\r\n            var totalLength = 0;\r\n            waypoints.forEach(function (point, index) {\r\n                var a = point[0] - planningArea[index][0];\r\n                var b = point[1] - planningArea[index][1];\r\n                var length = Math.sqrt(a * a + b * b); // Math.abs(a * b);\r\n                durations.push(length);\r\n                totalLength += length;\r\n            });\r\n            durations.forEach(function (duration, index) {\r\n                durations[index] = duration * exports.AREA_ANIMATION_DURATION / totalLength;\r\n            });\r\n            var paths = [start];\r\n            var movingPoint = {\r\n                x: start[0],\r\n                y: start[1],\r\n            };\r\n            var timeline = animejs_1.default.timeline({\r\n                update: function () {\r\n                    if (paths.length) {\r\n                        _this.maskPolyline.geometry = {\r\n                            type: \"polyline\",\r\n                            paths: [paths.concat([[movingPoint.x, movingPoint.y]])],\r\n                            spatialReference: SpatialReference_1.default.WebMercator,\r\n                        };\r\n                    }\r\n                },\r\n            });\r\n            waypoints.forEach(function (point, index) {\r\n                timeline = timeline.add({\r\n                    targets: movingPoint,\r\n                    x: point[0],\r\n                    y: point[1],\r\n                    duration: durations[index],\r\n                    easing: \"easeInOutCubic\",\r\n                    complete: function () {\r\n                        paths.push([movingPoint.x, movingPoint.y]);\r\n                    },\r\n                });\r\n            });\r\n            return timeline.finished;\r\n        };\r\n        Timeline.prototype.animateMask = function () {\r\n            var _this = this;\r\n            var color = new Color_1.default({\r\n                r: 226,\r\n                g: 119,\r\n                b: 40,\r\n                a: 0,\r\n            });\r\n            var buildingColor = new Color_1.default({\r\n                r: 256,\r\n                g: 256,\r\n                b: 256,\r\n            });\r\n            var timeline = animejs_1.default.timeline({\r\n                update: function () {\r\n                    _this.maskPolygon.symbol = maskPolygonSymbol(color);\r\n                    _this.app.scene.showMaskedBuildings(buildingColor);\r\n                },\r\n            }).add({\r\n                targets: [color, buildingColor],\r\n                r: 226,\r\n                g: 119,\r\n                b: 40,\r\n                a: 0.6,\r\n                duration: exports.MASK_ANIMATION_DURATION / 2,\r\n                easing: \"easeInOutCubic\",\r\n            }).add({\r\n                targets: [color, buildingColor],\r\n                a: 0,\r\n                delay: 100,\r\n                duration: exports.MASK_ANIMATION_DURATION / 2,\r\n                endDelay: 1500,\r\n                easing: \"easeInOutCubic\",\r\n                complete: function () {\r\n                    _this.maskPolyline.geometry = EMPTY_POLYLINE;\r\n                },\r\n            });\r\n            return timeline.finished;\r\n        };\r\n        Timeline.prototype.toggleBasemap = function (show) {\r\n            this.app.scene.map.basemap = (show ? \"satellite\" : null);\r\n            this.vectorTileLayer.visible = !show;\r\n            return this.app.scene.whenNotUpdating();\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.aliasOf(\"app.scene.map.presentation.slides\")\r\n        ], Timeline.prototype, \"slides\", void 0);\r\n        Timeline = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.widgets.Timeline\")\r\n        ], Timeline);\r\n        return Timeline;\r\n    }(WidgetBase_1.default));\r\n    exports[\"default\"] = Timeline;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/Timeline.tsx?");

/***/ }),

/***/ "./src/ts/support/geometry.ts":
/*!************************************!*\
  !*** ./src/ts/support/geometry.ts ***!
  \************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Copyright 2019 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! esri/geometry/geometryEngine */ \"esri/geometry/geometryEngine\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, geometryEngine_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.computeBoundingPolygon = void 0;\r\n    var computeBoundingPolygon = function (polygon) {\r\n        var hull = geometryEngine_1.convexHull(polygon);\r\n        var centroid = hull.centroid;\r\n        var rings = hull.rings;\r\n        rings.forEach(function (ring) { return ring.forEach(function (point) {\r\n            point[0] = point[0] + (point[0] - centroid.x) * 100;\r\n            point[1] = point[1] + (point[1] - centroid.y) * 100;\r\n        }); });\r\n        hull.rings = rings;\r\n        return geometryEngine_1.difference(hull, polygon);\r\n    };\r\n    exports.computeBoundingPolygon = computeBoundingPolygon;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/support/geometry.ts?");

/***/ }),

/***/ "./src/ts/widget/CreateArea.tsx":
/*!**************************************!*\
  !*** ./src/ts/widget/CreateArea.tsx ***!
  \**************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/symbols/SimpleFillSymbol */ \"esri/symbols/SimpleFillSymbol\"), __webpack_require__(/*! esri/widgets/support/widget */ \"esri/widgets/support/widget\"), __webpack_require__(/*! ./DrawWidget */ \"./src/ts/widget/DrawWidget.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, decorators_1, SimpleFillSymbol_1, widget_1, DrawWidget_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    SimpleFillSymbol_1 = tslib_1.__importDefault(SimpleFillSymbol_1);\r\n    DrawWidget_1 = tslib_1.__importDefault(DrawWidget_1);\r\n    var CreateArea = /** @class */ (function (_super) {\r\n        tslib_1.__extends(CreateArea, _super);\r\n        function CreateArea() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.activeColor = null;\r\n            _this.colorMenus = [\r\n                {\r\n                    label: \"Ground\",\r\n                    color: \"#f0f0f0\",\r\n                },\r\n                {\r\n                    label: \"Grass\",\r\n                    color: \"#bdce8a\",\r\n                },\r\n                {\r\n                    label: \"Beach\",\r\n                    color: \"#dfca8f\",\r\n                },\r\n                {\r\n                    label: \"Water\",\r\n                    color: \"#a0b4cf\",\r\n                },\r\n                {\r\n                    label: \"Saltmarsh\",\r\n                    color: \"#786637\",\r\n                },\r\n            ];\r\n            return _this;\r\n        }\r\n        CreateArea.prototype.postInitialize = function () {\r\n            this.layer.elevationInfo = {\r\n                mode: \"on-the-ground\",\r\n            };\r\n        };\r\n        CreateArea.prototype.render = function () {\r\n            var _this = this;\r\n            var inactive = \"btn btn-large\";\r\n            var active = inactive + \" active\";\r\n            return (widget_1.tsx(\"div\", null,\r\n                widget_1.tsx(\"div\", { class: \"menu\" }, this.colorMenus.map(function (menu) { return (widget_1.tsx(\"div\", { class: \"menu-item\" },\r\n                    widget_1.tsx(\"button\", { class: menu.color === _this.activeColor ? active : inactive, onclick: _this.startDrawing.bind(_this, menu.color) },\r\n                        \"Create \",\r\n                        menu.label))); }))));\r\n        };\r\n        CreateArea.prototype.updateGraphic = function (graphic) {\r\n            return this.updatePolygonGraphic(graphic, graphic.symbol.color.toHex());\r\n        };\r\n        CreateArea.prototype.startDrawing = function (color) {\r\n            var _this = this;\r\n            var symbol = new SimpleFillSymbol_1.default({\r\n                color: color,\r\n                outline: {\r\n                    width: 0,\r\n                },\r\n            });\r\n            this.createPolygonGraphic(symbol, color).finally(function () {\r\n                _this.activeColor = null;\r\n            }).catch(function () {\r\n                // Ignore\r\n            });\r\n            this.activeColor = color;\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], CreateArea.prototype, \"activeColor\", void 0);\r\n        CreateArea = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.draw.CreateArea\")\r\n        ], CreateArea);\r\n        return CreateArea;\r\n    }(DrawWidget_1.default));\r\n    exports[\"default\"] = CreateArea;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/CreateArea.tsx?");

/***/ }),

/***/ "./src/ts/widget/CreateBuilding.tsx":
/*!******************************************!*\
  !*** ./src/ts/widget/CreateBuilding.tsx ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/symbols/PolygonSymbol3D */ \"esri/symbols/PolygonSymbol3D\"), __webpack_require__(/*! esri/widgets/support/widget */ \"esri/widgets/support/widget\"), __webpack_require__(/*! ./DrawWidget */ \"./src/ts/widget/DrawWidget.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, decorators_1, PolygonSymbol3D_1, widget_1, DrawWidget_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    PolygonSymbol3D_1 = tslib_1.__importDefault(PolygonSymbol3D_1);\r\n    DrawWidget_1 = tslib_1.__importDefault(DrawWidget_1);\r\n    var BUILDING_COLOR = \"#FFFFFF\";\r\n    var BUILDING_FLOOR_HEIGHT = 3;\r\n    var CreateBuilding = /** @class */ (function (_super) {\r\n        tslib_1.__extends(CreateBuilding, _super);\r\n        function CreateBuilding() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        CreateBuilding.prototype.postInitialize = function () {\r\n            this.layer.elevationInfo = {\r\n                mode: \"on-the-ground\",\r\n            };\r\n        };\r\n        CreateBuilding.prototype.render = function () {\r\n            var _this = this;\r\n            var inactive = \"btn btn-large\";\r\n            var active = inactive + \" active\";\r\n            return (widget_1.tsx(\"div\", null,\r\n                widget_1.tsx(\"div\", { class: \"menu\" }, [1, 2, 3].map(function (stories) { return (widget_1.tsx(\"div\", { class: \"menu-item\" },\r\n                    widget_1.tsx(\"button\", { class: stories === _this.stories ? active : inactive, onclick: _this.startDrawing.bind(_this, stories) },\r\n                        stories,\r\n                        \"-Story Building\"))); }))));\r\n        };\r\n        CreateBuilding.prototype.updateGraphic = function (graphic) {\r\n            return this.updatePolygonGraphic(graphic, BUILDING_COLOR);\r\n        };\r\n        CreateBuilding.prototype.startDrawing = function (stories) {\r\n            var _this = this;\r\n            var size = stories * BUILDING_FLOOR_HEIGHT;\r\n            var color = BUILDING_COLOR;\r\n            var symbol = new PolygonSymbol3D_1.default({\r\n                symbolLayers: [{\r\n                        type: \"extrude\",\r\n                        material: {\r\n                            color: color,\r\n                        },\r\n                        edges: {\r\n                            type: \"solid\",\r\n                            color: [100, 100, 100],\r\n                        },\r\n                        size: size,\r\n                    }],\r\n            });\r\n            this.createPolygonGraphic(symbol, color).finally(function () {\r\n                _this.stories = 0;\r\n            }).catch(function () {\r\n                // Ignore\r\n            });\r\n            this.stories = stories;\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], CreateBuilding.prototype, \"stories\", void 0);\r\n        CreateBuilding = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.draw.CreateBuilding\")\r\n        ], CreateBuilding);\r\n        return CreateBuilding;\r\n    }(DrawWidget_1.default));\r\n    exports[\"default\"] = CreateBuilding;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/CreateBuilding.tsx?");

/***/ }),

/***/ "./src/ts/widget/CreatePath.tsx":
/*!**************************************!*\
  !*** ./src/ts/widget/CreatePath.tsx ***!
  \**************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/symbols/SimpleLineSymbol */ \"esri/symbols/SimpleLineSymbol\"), __webpack_require__(/*! esri/widgets/support/widget */ \"esri/widgets/support/widget\"), __webpack_require__(/*! ./DrawWidget */ \"./src/ts/widget/DrawWidget.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, decorators_1, SimpleLineSymbol_1, widget_1, DrawWidget_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    SimpleLineSymbol_1 = tslib_1.__importDefault(SimpleLineSymbol_1);\r\n    DrawWidget_1 = tslib_1.__importDefault(DrawWidget_1);\r\n    var CreatePath = /** @class */ (function (_super) {\r\n        tslib_1.__extends(CreatePath, _super);\r\n        function CreatePath() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.activeMenu = null;\r\n            _this.menus = [\r\n                {\r\n                    label: \"Street\",\r\n                    color: \"#cbcbcb\",\r\n                    width: 20,\r\n                },\r\n                {\r\n                    label: \"Walking Path\",\r\n                    color: \"#b2b2b2\",\r\n                    width: 3,\r\n                },\r\n            ];\r\n            return _this;\r\n        }\r\n        CreatePath.prototype.postInitialize = function () {\r\n            this.layer.elevationInfo = {\r\n                mode: \"on-the-ground\",\r\n            };\r\n        };\r\n        CreatePath.prototype.render = function () {\r\n            var _this = this;\r\n            var inactive = \"btn btn-large\";\r\n            var active = inactive + \" active\";\r\n            return (widget_1.tsx(\"div\", null,\r\n                widget_1.tsx(\"div\", { class: \"menu\" }, this.menus.map(function (menu) { return (widget_1.tsx(\"div\", { class: \"menu-item\" },\r\n                    widget_1.tsx(\"button\", { class: menu === _this.activeMenu ? active : inactive, onclick: _this.startDrawing.bind(_this, menu) },\r\n                        \"Create \",\r\n                        menu.label))); }))));\r\n        };\r\n        CreatePath.prototype.updateGraphic = function (graphic) {\r\n            return this.updatePolylineGraphic(graphic, graphic.symbol.color.toHex());\r\n        };\r\n        CreatePath.prototype.startDrawing = function (menu) {\r\n            var _this = this;\r\n            var symbol = new SimpleLineSymbol_1.default({\r\n                color: menu.color,\r\n                width: menu.width,\r\n            });\r\n            this.createPolylineGraphic(symbol, menu.color).finally(function () {\r\n                _this.activeMenu = null;\r\n            }).catch(function () {\r\n                // Ignore\r\n            });\r\n            this.activeMenu = menu;\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], CreatePath.prototype, \"activeMenu\", void 0);\r\n        CreatePath = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.draw.CreatePath\")\r\n        ], CreatePath);\r\n        return CreatePath;\r\n    }(DrawWidget_1.default));\r\n    exports[\"default\"] = CreatePath;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/CreatePath.tsx?");

/***/ }),

/***/ "./src/ts/widget/DrawWidget.ts":
/*!*************************************!*\
  !*** ./src/ts/widget/DrawWidget.ts ***!
  \*************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/core/watchUtils */ \"esri/core/watchUtils\"), __webpack_require__(/*! esri/Graphic */ \"esri/Graphic\"), __webpack_require__(/*! esri/layers/GraphicsLayer */ \"esri/layers/GraphicsLayer\"), __webpack_require__(/*! ./operation/DrawPoint */ \"./src/ts/widget/operation/DrawPoint.ts\"), __webpack_require__(/*! ./operation/DrawPolygon */ \"./src/ts/widget/operation/DrawPolygon.ts\"), __webpack_require__(/*! ./operation/DrawPolyline */ \"./src/ts/widget/operation/DrawPolyline.ts\"), __webpack_require__(/*! ./WidgetBase */ \"./src/ts/widget/WidgetBase.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, decorators_1, watchUtils_1, Graphic_1, GraphicsLayer_1, DrawPoint_1, DrawPolygon_1, DrawPolyline_1, WidgetBase_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    Graphic_1 = tslib_1.__importDefault(Graphic_1);\r\n    GraphicsLayer_1 = tslib_1.__importDefault(GraphicsLayer_1);\r\n    DrawPoint_1 = tslib_1.__importDefault(DrawPoint_1);\r\n    DrawPolygon_1 = tslib_1.__importDefault(DrawPolygon_1);\r\n    DrawPolyline_1 = tslib_1.__importDefault(DrawPolyline_1);\r\n    WidgetBase_1 = tslib_1.__importDefault(WidgetBase_1);\r\n    var DrawWidget = /** @class */ (function (_super) {\r\n        tslib_1.__extends(DrawWidget, _super);\r\n        function DrawWidget(params) {\r\n            var _this = _super.call(this, params) || this;\r\n            _this.layer = new GraphicsLayer_1.default({\r\n                elevationInfo: {\r\n                    mode: \"relative-to-scene\",\r\n                },\r\n            });\r\n            watchUtils_1.whenOnce(_this, \"app.scene.map\", function () { return _this.app.scene.map.add(_this.layer); });\r\n            return _this;\r\n        }\r\n        DrawWidget.prototype.updateGraphic = function (graphic) {\r\n            if (graphic.geometry.type === \"point\") {\r\n                return new DrawPoint_1.default(this, graphic).update().then(function () { return [graphic]; });\r\n            }\r\n            else {\r\n                throw new Error(\"Implement in subclass\");\r\n            }\r\n        };\r\n        DrawWidget.prototype.createPolylineGraphic = function (symbol, sketchColor) {\r\n            var _this = this;\r\n            var graphic = new Graphic_1.default({ symbol: symbol });\r\n            return new DrawPolyline_1.default(this, graphic, sketchColor)\r\n                .create()\r\n                .then(function (polyline) { return _this.splitPolyline(polyline, graphic); });\r\n        };\r\n        DrawWidget.prototype.createPolygonGraphic = function (symbol, sketchColor) {\r\n            var _this = this;\r\n            var graphic = new Graphic_1.default({ symbol: symbol });\r\n            return new DrawPolygon_1.default(this, graphic, sketchColor)\r\n                .create()\r\n                .then(function (polygon) { return _this.splitPolygon(polygon, graphic); });\r\n        };\r\n        DrawWidget.prototype.createPointGraphic = function (symbol) {\r\n            var graphic = new Graphic_1.default({ symbol: symbol });\r\n            return new DrawPoint_1.default(this, graphic)\r\n                .create()\r\n                .then(function () {\r\n                return graphic;\r\n            });\r\n        };\r\n        DrawWidget.prototype.updatePolylineGraphic = function (graphic, sketchColor) {\r\n            var _this = this;\r\n            var zIndex = this.zIndexOf(graphic);\r\n            var updatedGraphics = new DrawPolyline_1.default(this, graphic, sketchColor)\r\n                .update()\r\n                .then(function (polyline) { return _this.splitPolyline(polyline, graphic); })\r\n                .then(function (graphics) {\r\n                _this.reorderGraphics(graphics, zIndex);\r\n                return graphics;\r\n            });\r\n            this.revertOrderedGraphic(updatedGraphics, graphic, zIndex);\r\n            return updatedGraphics;\r\n        };\r\n        DrawWidget.prototype.updatePolygonGraphic = function (graphic, sketchColor) {\r\n            var _this = this;\r\n            var zIndex = this.zIndexOf(graphic);\r\n            var updatedGraphics = new DrawPolygon_1.default(this, graphic, sketchColor)\r\n                .update()\r\n                .then(function (polygon) { return _this.splitPolygon(polygon, graphic); })\r\n                .then(function (graphics) {\r\n                _this.reorderGraphics(graphics, zIndex);\r\n                return graphics;\r\n            });\r\n            this.revertOrderedGraphic(updatedGraphics, graphic, zIndex);\r\n            return updatedGraphics;\r\n        };\r\n        DrawWidget.prototype.zIndexOf = function (graphic) {\r\n            return this.layer.graphics.indexOf(graphic);\r\n        };\r\n        DrawWidget.prototype.reorderGraphics = function (graphics, zIndex) {\r\n            this.layer.removeMany(graphics);\r\n            var graphicsOnTop = this.layer.graphics.slice(zIndex).toArray();\r\n            this.layer.removeMany(graphicsOnTop);\r\n            this.layer.addMany(graphics);\r\n            this.layer.addMany(graphicsOnTop.map(function (g) { return Graphic_1.default.fromJSON(g.toJSON()); }));\r\n        };\r\n        DrawWidget.prototype.revertOrderedGraphic = function (promise, originalGraphic, zIndex) {\r\n            var _this = this;\r\n            // The JS API will emit a cancel event if the graphic has not changed, even if it changed the order. We fix this\r\n            // by catching and calling reorderGraphics().\r\n            promise.catch(function () {\r\n                var newZIndex = _this.zIndexOf(originalGraphic);\r\n                if (0 <= newZIndex) {\r\n                    _this.reorderGraphics([originalGraphic], zIndex);\r\n                }\r\n            });\r\n        };\r\n        DrawWidget.prototype.splitPolyline = function (polyline, graphic) {\r\n            var graphics = [];\r\n            if (1 < polyline.paths.length) {\r\n                polyline.paths.forEach(function (path) {\r\n                    var clonedGraphic = graphic.clone();\r\n                    clonedGraphic.geometry.paths = [path];\r\n                    graphics.push(clonedGraphic);\r\n                });\r\n            }\r\n            else {\r\n                graphics.push(graphic);\r\n            }\r\n            return graphics;\r\n        };\r\n        DrawWidget.prototype.splitPolygon = function (polygon, graphic) {\r\n            var graphics = [];\r\n            if (1 < polygon.rings.length) {\r\n                polygon.rings.forEach(function (ring) {\r\n                    var clonedGraphic = graphic.clone();\r\n                    clonedGraphic.geometry.rings = [ring];\r\n                    graphics.push(clonedGraphic);\r\n                });\r\n            }\r\n            else {\r\n                graphics.push(graphic);\r\n            }\r\n            return graphics;\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], DrawWidget.prototype, \"layer\", void 0);\r\n        DrawWidget = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.draw.DrawWidget\")\r\n        ], DrawWidget);\r\n        return DrawWidget;\r\n    }(WidgetBase_1.default));\r\n    exports[\"default\"] = DrawWidget;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/DrawWidget.ts?");

/***/ }),

/***/ "./src/ts/widget/GlTFWidget.tsx":
/*!**************************************!*\
  !*** ./src/ts/widget/GlTFWidget.tsx ***!
  \**************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/Graphic */ \"esri/Graphic\"), __webpack_require__(/*! esri/symbols/ObjectSymbol3DLayer */ \"esri/symbols/ObjectSymbol3DLayer\"), __webpack_require__(/*! esri/symbols/PointSymbol3D */ \"esri/symbols/PointSymbol3D\"), __webpack_require__(/*! esri/widgets/support/widget */ \"esri/widgets/support/widget\"), __webpack_require__(/*! ./DrawWidget */ \"./src/ts/widget/DrawWidget.ts\"), __webpack_require__(/*! ./support/GlTFImport */ \"./src/ts/widget/support/GlTFImport.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, decorators_1, Graphic_1, ObjectSymbol3DLayer_1, PointSymbol3D_1, widget_1, DrawWidget_1, GlTFImport_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    Graphic_1 = tslib_1.__importDefault(Graphic_1);\r\n    ObjectSymbol3DLayer_1 = tslib_1.__importDefault(ObjectSymbol3DLayer_1);\r\n    PointSymbol3D_1 = tslib_1.__importDefault(PointSymbol3D_1);\r\n    DrawWidget_1 = tslib_1.__importDefault(DrawWidget_1);\r\n    GlTFImport_1 = tslib_1.__importDefault(GlTFImport_1);\r\n    var GlTFWidgetState;\r\n    (function (GlTFWidgetState) {\r\n        GlTFWidgetState[\"Import\"] = \"Import\";\r\n        GlTFWidgetState[\"Loading\"] = \"Loading\";\r\n        GlTFWidgetState[\"Place\"] = \"Place\";\r\n        GlTFWidgetState[\"Idle\"] = \"Idle\";\r\n    })(GlTFWidgetState || (GlTFWidgetState = {}));\r\n    var GlTFWidget = /** @class */ (function (_super) {\r\n        tslib_1.__extends(GlTFWidget, _super);\r\n        function GlTFWidget() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.state = GlTFWidgetState.Idle;\r\n            return _this;\r\n        }\r\n        GlTFWidget.prototype.postInitialize = function () {\r\n            var _this = this;\r\n            this.watch(\"progress\", function (value) { return _this.toggleLoadingIndicator(true, \"Importing \" + value + \"%\"); });\r\n        };\r\n        GlTFWidget.prototype.render = function () {\r\n            var _this = this;\r\n            var classList = Object.keys(GlTFWidgetState).reduce(function (map, key) {\r\n                if (_this.state === key) {\r\n                    map[key] = [\"sketchfab-widget\"];\r\n                }\r\n                else {\r\n                    map[key] = [\"sketchfab-widget\", \"hide\"];\r\n                }\r\n                return map;\r\n            }, {});\r\n            return (widget_1.tsx(\"div\", null,\r\n                widget_1.tsx(\"div\", { class: classList[GlTFWidgetState.Import].join(\" \"), afterCreate: this.attachImportWidget.bind(this) },\r\n                    widget_1.tsx(\"div\", { id: \"glTFLogo\", class: \"gltf-logo\" }))));\r\n        };\r\n        GlTFWidget.prototype.startImport = function () {\r\n            var _this = this;\r\n            this.state = GlTFWidgetState.Import;\r\n            window.onblur = function () { return _this.removeGlTFLogo(); };\r\n        };\r\n        GlTFWidget.prototype.removeGlTFLogo = function () {\r\n            var logo = document.getElementById(\"glTFLogo\");\r\n            if (logo) {\r\n                logo.classList.add(\"hide\");\r\n            }\r\n        };\r\n        GlTFWidget.prototype.importGlTF = function (url) {\r\n            var _this = this;\r\n            this.toggleLoadingIndicator(true);\r\n            this.state = GlTFWidgetState.Loading;\r\n            this.currentImport = new GlTFImport_1.default(url);\r\n            this.currentImport.blobUrl.then(function (blobUrl) {\r\n                _this.toggleLoadingIndicator(false);\r\n                // Place imported glTF in center of view\r\n                var point = _this.app.scene.view.center.clone();\r\n                var graphic = new Graphic_1.default({\r\n                    geometry: point,\r\n                    symbol: new PointSymbol3D_1.default({\r\n                        symbolLayers: [\r\n                            new ObjectSymbol3DLayer_1.default({\r\n                                resource: {\r\n                                    href: blobUrl,\r\n                                },\r\n                                anchor: \"relative\",\r\n                                anchorPosition: { x: 0, y: 0, z: -0.5 },\r\n                            }),\r\n                        ],\r\n                    }),\r\n                });\r\n                // this.layer.removeAll();\r\n                _this.layer.add(graphic);\r\n                _this.updateGraphic(graphic);\r\n                _this.state = GlTFWidgetState.Idle;\r\n            }).catch(function (error) {\r\n                console.error(\"Something just went wrong\", error);\r\n            });\r\n        };\r\n        GlTFWidget.prototype.attachImportWidget = function (element) {\r\n            var _this = this;\r\n            return new window.SketchfabImporter(element, {\r\n                onModelSelected: function (result) {\r\n                    _this.importGlTF(result.download.gltf.url);\r\n                },\r\n            });\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], GlTFWidget.prototype, \"state\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], GlTFWidget.prototype, \"currentImport\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property(),\r\n            decorators_1.aliasOf(\"currentImport.progress\")\r\n        ], GlTFWidget.prototype, \"progress\", void 0);\r\n        GlTFWidget = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.draw.GlTFWidget\")\r\n        ], GlTFWidget);\r\n        return GlTFWidget;\r\n    }(DrawWidget_1.default));\r\n    exports[\"default\"] = GlTFWidget;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/GlTFWidget.tsx?");

/***/ }),

/***/ "./src/ts/widget/SymbolGallery.tsx":
/*!*****************************************!*\
  !*** ./src/ts/widget/SymbolGallery.tsx ***!
  \*****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/core/Collection */ \"esri/core/Collection\"), __webpack_require__(/*! esri/portal/Portal */ \"esri/portal/Portal\"), __webpack_require__(/*! esri/portal/PortalQueryParams */ \"esri/portal/PortalQueryParams\"), __webpack_require__(/*! esri/widgets/support/widget */ \"esri/widgets/support/widget\"), __webpack_require__(/*! ./DrawWidget */ \"./src/ts/widget/DrawWidget.ts\"), __webpack_require__(/*! ./symbols/SymbolGroup */ \"./src/ts/widget/symbols/SymbolGroup.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, decorators_1, Collection_1, Portal_1, PortalQueryParams_1, widget_1, DrawWidget_1, SymbolGroup_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.SymbolGroupId = void 0;\r\n    Collection_1 = tslib_1.__importDefault(Collection_1);\r\n    Portal_1 = tslib_1.__importDefault(Portal_1);\r\n    PortalQueryParams_1 = tslib_1.__importDefault(PortalQueryParams_1);\r\n    DrawWidget_1 = tslib_1.__importDefault(DrawWidget_1);\r\n    SymbolGroup_1 = tslib_1.__importDefault(SymbolGroup_1);\r\n    var SymbolGroupId;\r\n    (function (SymbolGroupId) {\r\n        SymbolGroupId[\"Icons\"] = \"Icons\";\r\n        SymbolGroupId[\"Trees\"] = \"Trees\";\r\n        SymbolGroupId[\"Vehicles\"] = \"Vehicles\";\r\n    })(SymbolGroupId = exports.SymbolGroupId || (exports.SymbolGroupId = {}));\r\n    var SymbolGallery = /** @class */ (function (_super) {\r\n        tslib_1.__extends(SymbolGallery, _super);\r\n        function SymbolGallery() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.groups = new Collection_1.default();\r\n            _this.iconClass = \"icon-ui-collection\";\r\n            _this.portal = null;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(SymbolGallery.prototype, \"selectedGroup\", {\r\n            get: function () {\r\n                var selectedGroupId = this.selectedGroupId;\r\n                return this.groups.find(function (group) { return group.category === selectedGroupId; });\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        SymbolGallery.prototype.postInitialize = function () {\r\n            if (!this.groups.length) {\r\n                var futureItems = this.queryPortalItems();\r\n                this.groups.add(new SymbolGroup_1.default(SymbolGroupId.Icons, futureItems));\r\n                this.groups.add(new SymbolGroup_1.default(SymbolGroupId.Trees, futureItems));\r\n                this.groups.add(new SymbolGroup_1.default(SymbolGroupId.Vehicles, futureItems));\r\n            }\r\n        };\r\n        SymbolGallery.prototype.render = function () {\r\n            var _this = this;\r\n            var selectedGroup = this.selectedGroup;\r\n            var galleryItems = selectedGroup ? selectedGroup.items.toArray() : [];\r\n            var galleryGridClass = galleryItems.length ? [\"gallery-grid\"] : [\"hide\"];\r\n            return (widget_1.tsx(\"div\", null,\r\n                widget_1.tsx(\"div\", { class: galleryGridClass.join(\" \") }, galleryItems.map(function (item) { return _this.renderSymbolItem(item); }))));\r\n        };\r\n        SymbolGallery.prototype.renderSymbolItem = function (item) {\r\n            var href = item.thumbnailHref;\r\n            return (widget_1.tsx(\"div\", { class: \"gallery-grid-item\", key: href, bind: this, onclick: this.selectSymbolItem, \"data-item\": item },\r\n                widget_1.tsx(\"img\", { src: href })));\r\n        };\r\n        SymbolGallery.prototype.selectSymbolItem = function (event) {\r\n            var _this = this;\r\n            var selectedSymbol = event.currentTarget[\"data-item\"];\r\n            if (selectedSymbol) {\r\n                this.selectedGroupId = null;\r\n                selectedSymbol.fetchSymbol().then(function (symbol) {\r\n                    return _this.placeSymbol(symbol);\r\n                }).catch(function () {\r\n                    // Ignore\r\n                });\r\n            }\r\n        };\r\n        SymbolGallery.prototype.placeSymbol = function (symbol) {\r\n            var _this = this;\r\n            return this.createPointGraphic(symbol).then(function (graphic) {\r\n                return _this.placeSymbol(graphic.symbol);\r\n            });\r\n        };\r\n        SymbolGallery.prototype.loadPortal = function () {\r\n            var _this = this;\r\n            var portal = this.portal || Portal_1.default.getDefault();\r\n            return portal.load().then(function () {\r\n                _this.portal = portal;\r\n                return portal;\r\n            });\r\n        };\r\n        SymbolGallery.prototype.queryPortalItems = function () {\r\n            return this.loadPortal()\r\n                .then(function (portal) {\r\n                return portal.queryGroups({\r\n                    query: \"title:\\\"Esri Styles\\\" AND owner:esri_en\",\r\n                });\r\n            })\r\n                .then(function (groups) {\r\n                var queryParams = new PortalQueryParams_1.default({\r\n                    num: 20,\r\n                    sortField: \"title\",\r\n                });\r\n                return groups.results[0].queryItems(queryParams);\r\n            })\r\n                .then(function (queryResult) {\r\n                return queryResult.results;\r\n            });\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], SymbolGallery.prototype, \"scene\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], SymbolGallery.prototype, \"groups\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], SymbolGallery.prototype, \"selectedGroupId\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property({\r\n                readOnly: true,\r\n                dependsOn: [\"selectedGroupId\", \"groups\"],\r\n            })\r\n        ], SymbolGallery.prototype, \"selectedGroup\", null);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], SymbolGallery.prototype, \"selectedSymbol\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property({\r\n                readOnly: true,\r\n            })\r\n        ], SymbolGallery.prototype, \"iconClass\", void 0);\r\n        SymbolGallery = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.draw.SymbolGallery\")\r\n        ], SymbolGallery);\r\n        return SymbolGallery;\r\n    }(DrawWidget_1.default));\r\n    exports[\"default\"] = SymbolGallery;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/SymbolGallery.tsx?");

/***/ }),

/***/ "./src/ts/widget/WidgetBase.ts":
/*!*************************************!*\
  !*** ./src/ts/widget/WidgetBase.ts ***!
  \*************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/widgets/Widget */ \"esri/widgets/Widget\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, decorators_1, Widget_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    Widget_1 = tslib_1.__importDefault(Widget_1);\r\n    var WidgetBase = /** @class */ (function (_super) {\r\n        tslib_1.__extends(WidgetBase, _super);\r\n        function WidgetBase(params) {\r\n            if (params === void 0) { params = {}; }\r\n            return _super.call(this, params) || this;\r\n        }\r\n        WidgetBase.prototype.toggleLoadingIndicator = function (show, message) {\r\n            if (message === void 0) { message = \"Loading...\"; }\r\n            this.toggleElement(\"loadingIndicator\", show);\r\n            this.toggleOverlay(show);\r\n            var text = document.getElementById(\"loadingIndicatorText\");\r\n            if (text) {\r\n                text.innerText = message;\r\n            }\r\n        };\r\n        WidgetBase.prototype.toggleElement = function (id, show) {\r\n            var element = document.getElementById(id);\r\n            if (element) {\r\n                if (show) {\r\n                    element.classList.remove(\"hide\");\r\n                }\r\n                else {\r\n                    element.classList.add(\"hide\");\r\n                }\r\n            }\r\n        };\r\n        WidgetBase.prototype.toggleOverlay = function (show, opacity) {\r\n            if (opacity === void 0) { opacity = 0.6; }\r\n            this.toggleElement(\"overlay\", show);\r\n            var overlay = document.getElementById(\"overlay\");\r\n            if (overlay) {\r\n                overlay.style.opacity = opacity.toString();\r\n            }\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], WidgetBase.prototype, \"app\", void 0);\r\n        WidgetBase = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.widgets.WidgetBase\")\r\n        ], WidgetBase);\r\n        return WidgetBase;\r\n    }(Widget_1.default));\r\n    exports[\"default\"] = WidgetBase;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/WidgetBase.ts?");

/***/ }),

/***/ "./src/ts/widget/operation/DrawGeometry.ts":
/*!*************************************************!*\
  !*** ./src/ts/widget/operation/DrawGeometry.ts ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/geometry/geometryEngine */ \"esri/geometry/geometryEngine\"), __webpack_require__(/*! esri/geometry/Point */ \"esri/geometry/Point\"), __webpack_require__(/*! esri/widgets/Sketch/SketchViewModel */ \"esri/widgets/Sketch/SketchViewModel\"), __webpack_require__(/*! ./WidgetOperation */ \"./src/ts/widget/operation/WidgetOperation.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, geometryEngine, Point_1, SketchViewModel_1, WidgetOperation_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    Point_1 = tslib_1.__importDefault(Point_1);\r\n    SketchViewModel_1 = tslib_1.__importDefault(SketchViewModel_1);\r\n    WidgetOperation_1 = tslib_1.__importDefault(WidgetOperation_1);\r\n    var DrawGeometry = /** @class */ (function (_super) {\r\n        tslib_1.__extends(DrawGeometry, _super);\r\n        function DrawGeometry(widget, graphic, geometryType) {\r\n            var _this = _super.call(this, widget) || this;\r\n            _this.graphic = graphic;\r\n            _this.geometryType = geometryType;\r\n            _this.scene = widget.app.scene;\r\n            return _this;\r\n        }\r\n        DrawGeometry.prototype.create = function () {\r\n            return this.runSketchViewModel(true);\r\n        };\r\n        DrawGeometry.prototype.update = function () {\r\n            return this.runSketchViewModel(false);\r\n        };\r\n        DrawGeometry.prototype.runSketchViewModel = function (create) {\r\n            var _this = this;\r\n            if (DrawGeometry.currentHandle) {\r\n                // If a draw operation is already active, we cancel it and ignore the new one.\r\n                DrawGeometry.currentHandle.reject();\r\n                return Promise.reject();\r\n            }\r\n            var haloOpacity = this.scene.view.highlightOptions.haloOpacity;\r\n            var fillOpacity = this.scene.view.highlightOptions.fillOpacity;\r\n            var sketchViewModel = this.createSketchViewModel();\r\n            var keyEventListener = this.scene.view.on(\"key-down\", function (event) {\r\n                var remove = (event.key === \"Delete\" || event.key === \"Backspace\");\r\n                if (remove || event.key === \"Escape\") {\r\n                    if (remove || create) {\r\n                        _this.widget.layer.remove(_this.graphic);\r\n                    }\r\n                    _this.cancel();\r\n                }\r\n            });\r\n            var promise = this.initiate(function (handle) {\r\n                DrawGeometry.currentHandle = handle;\r\n                if (create) {\r\n                    _this.scene.view.highlightOptions.haloOpacity = 0;\r\n                }\r\n                _this.scene.view.highlightOptions.fillOpacity = 0;\r\n                sketchViewModel.on(\"create\", function (event) {\r\n                    _this.onSketchViewModelEvent(sketchViewModel, event, event.state === \"cancel\", handle);\r\n                });\r\n                sketchViewModel.on(\"update\", function (event) {\r\n                    _this.onSketchViewModelEvent(sketchViewModel, event, event.aborted, handle);\r\n                });\r\n                _this.launchSketchViewModel(sketchViewModel, create);\r\n                _this.scene.view.focus();\r\n            }, function () {\r\n                sketchViewModel.cancel();\r\n            });\r\n            // Clean up\r\n            return promise.finally(function () {\r\n                DrawGeometry.currentHandle = null;\r\n                // Cleanup resources\r\n                keyEventListener.remove();\r\n                sketchViewModel.cancel();\r\n                sketchViewModel.destroy();\r\n                // Reset scene\r\n                _this.scene.view.highlightOptions.haloOpacity = haloOpacity;\r\n                _this.scene.view.highlightOptions.fillOpacity = fillOpacity;\r\n            });\r\n        };\r\n        DrawGeometry.prototype.launchSketchViewModel = function (sketchViewModel, create) {\r\n            var sketchGraphic = this.createSketch(sketchViewModel);\r\n            if (create) {\r\n                sketchViewModel.create(this.geometryType);\r\n            }\r\n            else {\r\n                // Remove z value for point graphics as currently the SketchViewModel won't allow that\r\n                var hasZ = sketchGraphic.geometry.hasZ;\r\n                var lastGeometry = sketchGraphic.geometry.clone();\r\n                if (hasZ) {\r\n                    sketchGraphic.geometry.hasZ = false;\r\n                }\r\n                if (sketchGraphic.geometry.type === \"point\") {\r\n                    sketchViewModel.update(sketchGraphic);\r\n                }\r\n                else {\r\n                    sketchViewModel.update(sketchGraphic, { tool: \"reshape\" });\r\n                }\r\n                if (hasZ) {\r\n                    sketchGraphic.geometry = lastGeometry;\r\n                }\r\n            }\r\n        };\r\n        DrawGeometry.prototype.createSketchViewModel = function () {\r\n            var _this = this;\r\n            var otherLayers = this.scene.map.allLayers.filter(function (l) { return l.type === \"graphics\" && l !== _this.widget.layer; });\r\n            var svm = new SketchViewModel_1.default({\r\n                view: this.scene.view,\r\n                layer: this.widget.layer,\r\n                updateOnGraphicClick: false,\r\n                snappingOptions: {\r\n                    enabled: true,\r\n                    selfEnabled: true,\r\n                    featureEnabled: true,\r\n                    featureSources: otherLayers.map(function (layer) {\r\n                        return { layer: layer, enabled: true };\r\n                    }),\r\n                },\r\n            });\r\n            svm.defaultCreateOptions.hasZ = false;\r\n            return svm;\r\n        };\r\n        DrawGeometry.prototype.createSketch = function (_) {\r\n            return this.graphic;\r\n        };\r\n        DrawGeometry.prototype.geometryFromSketch = function (sketchGraphic) {\r\n            return sketchGraphic.geometry.clone();\r\n        };\r\n        DrawGeometry.prototype.updateGraphicFromGeometry = function (geometry) {\r\n            if (geometry) {\r\n                this.graphic.geometry = geometry;\r\n                this.graphic.visible = true;\r\n                if (!this.graphic.layer) {\r\n                    this.widget.layer.add(this.graphic);\r\n                }\r\n            }\r\n            else {\r\n                this.graphic.visible = false;\r\n            }\r\n        };\r\n        DrawGeometry.prototype.clippedGeometry = function (geometry) {\r\n            var maskPolygon = this.scene.maskPolygon;\r\n            var result = geometryEngine.intersect(maskPolygon, geometry);\r\n            return result;\r\n        };\r\n        DrawGeometry.prototype.snapPoint = function (point) {\r\n            var maskPolygon = this.scene.maskPolygon;\r\n            return geometryEngine.nearestCoordinate(maskPolygon, point).coordinate;\r\n        };\r\n        DrawGeometry.prototype.snapVertices = function (vertices) {\r\n            var _this = this;\r\n            var spatialReference = this.scene.view.spatialReference;\r\n            vertices.forEach(function (point) {\r\n                var snappedPoint = _this.snapPoint(new Point_1.default({\r\n                    x: point[0],\r\n                    y: point[1],\r\n                    spatialReference: spatialReference,\r\n                }));\r\n                point[0] = snappedPoint.x;\r\n                point[1] = snappedPoint.y;\r\n            });\r\n        };\r\n        DrawGeometry.prototype.onSketchViewModelEvent = function (sketchViewModel, event, cancel, handle) {\r\n            var sketch = this.graphicFromEvent(event);\r\n            // If we are done, remove extra sketch graphic\r\n            if (event.state === \"complete\" || cancel) {\r\n                if (sketch && sketch !== this.graphic) {\r\n                    sketchViewModel.layer.remove(sketch);\r\n                }\r\n            }\r\n            if (cancel || sketch === null) {\r\n                if (event.type === \"create\") {\r\n                    this.widget.layer.remove(this.graphic);\r\n                }\r\n                handle.reject();\r\n            }\r\n            else {\r\n                var geometry = this.geometryFromSketch(sketch);\r\n                this.updateGraphicFromGeometry(geometry);\r\n                if (event.state === \"complete\") {\r\n                    if (geometry) {\r\n                        handle.resolve(geometry);\r\n                    }\r\n                    else {\r\n                        this.widget.layer.remove(this.graphic);\r\n                        handle.reject();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DrawGeometry.prototype.graphicFromEvent = function (event) {\r\n            if (event.graphics && event.graphics.length) {\r\n                return event.graphics[0];\r\n            }\r\n            return event.graphic;\r\n        };\r\n        DrawGeometry.currentHandle = null;\r\n        return DrawGeometry;\r\n    }(WidgetOperation_1.default));\r\n    exports[\"default\"] = DrawGeometry;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/operation/DrawGeometry.ts?");

/***/ }),

/***/ "./src/ts/widget/operation/DrawPoint.ts":
/*!**********************************************!*\
  !*** ./src/ts/widget/operation/DrawPoint.ts ***!
  \**********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! ./DrawGeometry */ \"./src/ts/widget/operation/DrawGeometry.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, DrawGeometry_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    DrawGeometry_1 = tslib_1.__importDefault(DrawGeometry_1);\r\n    var DrawPoint = /** @class */ (function (_super) {\r\n        tslib_1.__extends(DrawPoint, _super);\r\n        function DrawPoint(widget, graphic) {\r\n            return _super.call(this, widget, graphic, \"point\") || this;\r\n        }\r\n        DrawPoint.prototype.create = function () {\r\n            var _this = this;\r\n            var result = _super.prototype.create.call(this);\r\n            var view = this.widget.app.scene.view;\r\n            // Update graphic when mouse moves\r\n            var handler = view.on(\"pointer-move\", function (event) {\r\n                var mapPoint = view.toMap(event, {\r\n                    include: view.map.allLayers.filter(function (l) { return l !== _this.widget.layer; }),\r\n                });\r\n                if (mapPoint) {\r\n                    var snappedPoint = _this.snapAndAddZ(mapPoint);\r\n                    _this.updateGraphicFromGeometry(snappedPoint);\r\n                }\r\n            });\r\n            // Remove event listener when operation is done\r\n            return result.finally(function () { return handler.remove(); });\r\n        };\r\n        DrawPoint.prototype.snapAndAddZ = function (point) {\r\n            return this.snapPoint(point);\r\n        };\r\n        DrawPoint.prototype.geometryFromSketch = function (sketchGraphic) {\r\n            var point = _super.prototype.geometryFromSketch.call(this, sketchGraphic);\r\n            if (point) {\r\n                return this.snapAndAddZ(point);\r\n            }\r\n            return null;\r\n        };\r\n        return DrawPoint;\r\n    }(DrawGeometry_1.default));\r\n    exports[\"default\"] = DrawPoint;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/operation/DrawPoint.ts?");

/***/ }),

/***/ "./src/ts/widget/operation/DrawPolygon.ts":
/*!************************************************!*\
  !*** ./src/ts/widget/operation/DrawPolygon.ts ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Copyright 2019 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/Color */ \"esri/Color\"), __webpack_require__(/*! ./DrawGeometry */ \"./src/ts/widget/operation/DrawGeometry.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, Color_1, DrawGeometry_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    Color_1 = tslib_1.__importDefault(Color_1);\r\n    DrawGeometry_1 = tslib_1.__importDefault(DrawGeometry_1);\r\n    var DrawPolygon = /** @class */ (function (_super) {\r\n        tslib_1.__extends(DrawPolygon, _super);\r\n        function DrawPolygon(widget, graphic, sketchColor) {\r\n            var _this = _super.call(this, widget, graphic, \"polygon\") || this;\r\n            _this.sketchColor = sketchColor;\r\n            return _this;\r\n        }\r\n        DrawPolygon.prototype.createSketchViewModel = function () {\r\n            var sketchViewModel = _super.prototype.createSketchViewModel.call(this);\r\n            var color = new Color_1.default(this.sketchColor);\r\n            color.a = 0.5;\r\n            sketchViewModel.polygonSymbol.color = color;\r\n            sketchViewModel.polygonSymbol.outline.width = 0;\r\n            sketchViewModel.polylineSymbol.color = color;\r\n            sketchViewModel.pointSymbol.color = color;\r\n            sketchViewModel.pointSymbol.outline.width = 0;\r\n            return sketchViewModel;\r\n        };\r\n        DrawPolygon.prototype.createSketch = function (sketchViewModel) {\r\n            var sketchGraphic = this.graphic.clone();\r\n            sketchGraphic.symbol = sketchViewModel.polygonSymbol;\r\n            return sketchGraphic;\r\n        };\r\n        DrawPolygon.prototype.geometryFromSketch = function (sketchGraphic) {\r\n            var geometry = _super.prototype.geometryFromSketch.call(this, sketchGraphic);\r\n            return geometry ? this.clippedGeometry(geometry) : null;\r\n        };\r\n        return DrawPolygon;\r\n    }(DrawGeometry_1.default));\r\n    exports[\"default\"] = DrawPolygon;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/operation/DrawPolygon.ts?");

/***/ }),

/***/ "./src/ts/widget/operation/DrawPolyline.ts":
/*!*************************************************!*\
  !*** ./src/ts/widget/operation/DrawPolyline.ts ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n * Copyright 2019 Esri\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/Color */ \"esri/Color\"), __webpack_require__(/*! ./DrawGeometry */ \"./src/ts/widget/operation/DrawGeometry.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, Color_1, DrawGeometry_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    Color_1 = tslib_1.__importDefault(Color_1);\r\n    DrawGeometry_1 = tslib_1.__importDefault(DrawGeometry_1);\r\n    var DrawPolyline = /** @class */ (function (_super) {\r\n        tslib_1.__extends(DrawPolyline, _super);\r\n        function DrawPolyline(widget, graphic, sketchColor) {\r\n            var _this = _super.call(this, widget, graphic, \"polyline\") || this;\r\n            _this.sketchColor = sketchColor;\r\n            return _this;\r\n        }\r\n        DrawPolyline.prototype.createSketchViewModel = function () {\r\n            var sketchViewModel = _super.prototype.createSketchViewModel.call(this);\r\n            var color = new Color_1.default(this.sketchColor);\r\n            color.a = 0.5;\r\n            sketchViewModel.polylineSymbol.color = color;\r\n            sketchViewModel.pointSymbol.color = color;\r\n            sketchViewModel.pointSymbol.outline.width = 0;\r\n            return sketchViewModel;\r\n        };\r\n        DrawPolyline.prototype.createSketch = function (sketchViewModel) {\r\n            var sketchGraphic = this.graphic.clone();\r\n            sketchGraphic.symbol = sketchViewModel.polylineSymbol;\r\n            return sketchGraphic;\r\n        };\r\n        DrawPolyline.prototype.geometryFromSketch = function (sketchGraphic) {\r\n            var polyline = _super.prototype.geometryFromSketch.call(this, sketchGraphic);\r\n            polyline = polyline ? this.clippedGeometry(polyline) : null;\r\n            return polyline;\r\n            // Trying to be smart to snap lines back onto the masking polygon\r\n            // polyline.paths.forEach((path) => this.snapVertices(path));\r\n            // if (polyline.paths.length && 2 <= polyline.paths[0].length) {\r\n            //   const path = polyline.paths.reduce((total, segment) => total.concat(segment));\r\n            //   polyline = new Polyline({\r\n            //     paths: [path],\r\n            //     spatialReference: this.scene.view.spatialReference,\r\n            //   });\r\n            // }\r\n        };\r\n        return DrawPolyline;\r\n    }(DrawGeometry_1.default));\r\n    exports[\"default\"] = DrawPolyline;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/operation/DrawPolyline.ts?");

/***/ }),

/***/ "./src/ts/widget/operation/WidgetOperation.ts":
/*!****************************************************!*\
  !*** ./src/ts/widget/operation/WidgetOperation.ts ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    var WidgetOperation = /** @class */ (function () {\r\n        function WidgetOperation(widget) {\r\n            this.widget = widget;\r\n        }\r\n        WidgetOperation.prototype.cancel = function () {\r\n            if (this.handle) {\r\n                this.handle.cancel();\r\n                this.handle = null;\r\n            }\r\n        };\r\n        WidgetOperation.prototype.initiate = function (start, cancel) {\r\n            var _this = this;\r\n            var promise = new Promise((function (resolve, reject) {\r\n                // Make this the current running operation\r\n                _this.widget.app.currentOperation = _this;\r\n                _this.handle = { cancel: cancel };\r\n                start({ resolve: resolve, reject: reject });\r\n            }));\r\n            return promise.finally(function () {\r\n                _this.widget.app.currentOperation = null;\r\n            });\r\n        };\r\n        return WidgetOperation;\r\n    }());\r\n    exports[\"default\"] = WidgetOperation;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/operation/WidgetOperation.ts?");

/***/ }),

/***/ "./src/ts/widget/support/GlTFImport.ts":
/*!*********************************************!*\
  !*** ./src/ts/widget/support/GlTFImport.ts ***!
  \*********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/Accessor */ \"esri/core/Accessor\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/core/promiseUtils */ \"esri/core/promiseUtils\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, Accessor_1, decorators_1, promiseUtils_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    Accessor_1 = tslib_1.__importDefault(Accessor_1);\r\n    var ZIP_PROGRESS_FACTOR = 0.5;\r\n    var GlTFImport = /** @class */ (function (_super) {\r\n        tslib_1.__extends(GlTFImport, _super);\r\n        function GlTFImport(url) {\r\n            var _this = _super.call(this) || this;\r\n            _this.url = url;\r\n            _this.progress = 0;\r\n            _this.zip = window.zip;\r\n            _this.reportProgress(\"start\", 0);\r\n            _this.blobUrl = _this\r\n                .downloadAndExtractZip(_this.url)\r\n                .then(function (entries) { return _this.zipEntriesToBlob(entries); })\r\n                .then(function (blobEntries) { return _this.combineToSingleBlob(blobEntries); })\r\n                .then(function (gltfBlob) { return gltfBlob.url; });\r\n            return _this;\r\n        }\r\n        GlTFImport.prototype.downloadAndExtractZip = function (url) {\r\n            var _this = this;\r\n            return promiseUtils_1.create((function (resolve, reject) {\r\n                var reader = new _this.zip.HttpProgressReader(url, {\r\n                    onProgress: _this.reportDownloadProgress.bind(_this),\r\n                });\r\n                _this.zip.createReader(reader, function (zipReader) {\r\n                    zipReader.getEntries(resolve);\r\n                }, reject);\r\n            }));\r\n        };\r\n        GlTFImport.prototype.zipEntriesToBlob = function (entries) {\r\n            var _this = this;\r\n            entries = entries.filter(function (entry) { return !entry.directory; });\r\n            // const progress = (currentIndex, totalIndex)\r\n            var completedBlobs = 0;\r\n            var promises = entries.map(function (entry) { return _this\r\n                .saveEntryToBlob(entry)\r\n                .then(function (blob) {\r\n                _this.reportUnzipProgress(entries.length, ++completedBlobs);\r\n                return blob;\r\n            }); });\r\n            return promiseUtils_1.eachAlways(promises).then(function (results) {\r\n                return results.map(function (result) { return result.value; });\r\n            });\r\n        };\r\n        GlTFImport.prototype.saveEntryToBlob = function (entry) {\r\n            var _this = this;\r\n            return promiseUtils_1.create((function (resolve) {\r\n                entry.getData(new _this.zip.BlobWriter(\"text/plain\"), function (data) {\r\n                    var url = window.URL.createObjectURL(data);\r\n                    resolve({\r\n                        name: entry.filename,\r\n                        url: url,\r\n                        blob: data,\r\n                    });\r\n                });\r\n            }));\r\n        };\r\n        GlTFImport.prototype.combineToSingleBlob = function (entries) {\r\n            var rootEntry = entries.reduce(function (previous, entry) { return !previous && entry.name.match(/\\.gltf$/) ? entry : previous; }, undefined);\r\n            if (!rootEntry) {\r\n                return promiseUtils_1.reject(\"Can not find a .gltf file in ZIP archive\");\r\n            }\r\n            var assets = entries.reduce(function (previous, entry) {\r\n                previous[entry.name] = entry.url;\r\n                return previous;\r\n            }, {});\r\n            var reader = new FileReader();\r\n            return promiseUtils_1.create((function (resolve, reject) {\r\n                reader.onload = function () {\r\n                    try {\r\n                        var gltfJson = JSON.parse(reader.result);\r\n                        // Replace original buffers and images by blob URLs\r\n                        if (gltfJson.hasOwnProperty(\"buffers\")) {\r\n                            gltfJson.buffers.forEach(function (buffer) { return buffer.uri = assets[buffer.uri]; });\r\n                        }\r\n                        if (gltfJson.hasOwnProperty(\"images\")) {\r\n                            gltfJson.images.forEach(function (image) { return image.uri = assets[image.uri]; });\r\n                        }\r\n                        var gltfContent = JSON.stringify(gltfJson, null, 2);\r\n                        var gltfBlob = new Blob([gltfContent], { type: \"text/plain\" });\r\n                        var gltfUrl = window.URL.createObjectURL(gltfBlob);\r\n                        resolve({\r\n                            name: rootEntry.name,\r\n                            url: gltfUrl,\r\n                            blob: gltfBlob,\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                };\r\n                // Read initial blob\r\n                reader.readAsText(rootEntry.blob);\r\n            }));\r\n        };\r\n        GlTFImport.prototype.reportDownloadProgress = function (event) {\r\n            var value = (event.loaded / event.total) * (1 - ZIP_PROGRESS_FACTOR);\r\n            this.reportProgress(\"download\", value);\r\n        };\r\n        GlTFImport.prototype.reportUnzipProgress = function (total, completed) {\r\n            var value = ZIP_PROGRESS_FACTOR + completed / total * ZIP_PROGRESS_FACTOR;\r\n            this.reportProgress(\"unzip\", value);\r\n        };\r\n        GlTFImport.prototype.reportProgress = function (task, value) {\r\n            this.task = task;\r\n            value = Math.floor(100 * value);\r\n            if (value >= this.progress) {\r\n                this.progress = value;\r\n            }\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], GlTFImport.prototype, \"progress\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], GlTFImport.prototype, \"task\", void 0);\r\n        GlTFImport = tslib_1.__decorate([\r\n            decorators_1.subclass(\"app.draw.support.GlTFImport\")\r\n        ], GlTFImport);\r\n        return GlTFImport;\r\n    }(Accessor_1.default));\r\n    exports[\"default\"] = GlTFImport;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/support/GlTFImport.ts?");

/***/ }),

/***/ "./src/ts/widget/symbols/SymbolGroup.ts":
/*!**********************************************!*\
  !*** ./src/ts/widget/symbols/SymbolGroup.ts ***!
  \**********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/Accessor */ \"esri/core/Accessor\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/core/Collection */ \"esri/core/Collection\"), __webpack_require__(/*! ../SymbolGallery */ \"./src/ts/widget/SymbolGallery.tsx\"), __webpack_require__(/*! ./SymbolItem */ \"./src/ts/widget/symbols/SymbolItem.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, Accessor_1, decorators_1, Collection_1, SymbolGallery_1, SymbolItem_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.SymbolItemCollection = void 0;\r\n    Accessor_1 = tslib_1.__importDefault(Accessor_1);\r\n    Collection_1 = tslib_1.__importDefault(Collection_1);\r\n    SymbolItem_1 = tslib_1.__importDefault(SymbolItem_1);\r\n    exports.SymbolItemCollection = Collection_1.default.ofType(SymbolItem_1.default);\r\n    var SymbolGroup = /** @class */ (function (_super) {\r\n        tslib_1.__extends(SymbolGroup, _super);\r\n        function SymbolGroup(category, portalItems) {\r\n            var _this = _super.call(this) || this;\r\n            _this.category = category;\r\n            _this.items = new exports.SymbolItemCollection();\r\n            portalItems.then(function (items) { return _this.addSymbolItems(items); });\r\n            return _this;\r\n        }\r\n        SymbolGroup.prototype.addSymbolItems = function (items) {\r\n            var _this = this;\r\n            items.forEach(function (item) {\r\n                var styleName = _this.getStyleName(item);\r\n                if (_this.styleNameMatchesGroup(styleName)) {\r\n                    item.fetchData().then(function (data) {\r\n                        _this.items.addMany(data.items\r\n                            //  .filter((symbolItem: any) => symbolItem.thumbnail.href && symbolItem.dimensionality === \"volumetric\")\r\n                            .map(function (symbolItem) { return new SymbolItem_1.default(symbolItem, styleName); }));\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        SymbolGroup.prototype.getStyleName = function (item) {\r\n            for (var _i = 0, _a = item.typeKeywords; _i < _a.length; _i++) {\r\n                var typeKeyword = _a[_i];\r\n                if (/^Esri.*Style$/.test(typeKeyword) && typeKeyword !== \"Esri Style\") {\r\n                    return typeKeyword;\r\n                }\r\n            }\r\n            return \"\";\r\n        };\r\n        SymbolGroup.prototype.styleNameMatchesGroup = function (styleName) {\r\n            switch (this.category) {\r\n                case SymbolGallery_1.SymbolGroupId.Icons:\r\n                    return styleName === \"EsriIconsStyle\";\r\n                case SymbolGallery_1.SymbolGroupId.Trees:\r\n                    return styleName === \"EsriRealisticTreesStyle\";\r\n                case SymbolGallery_1.SymbolGroupId.Vehicles:\r\n                    return styleName === \"EsriRealisticTransportationStyle\";\r\n                // || styleName === \"EsriInfrastructureStyle\";\r\n            }\r\n            return false;\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property({\r\n                readOnly: true,\r\n                type: exports.SymbolItemCollection,\r\n            })\r\n        ], SymbolGroup.prototype, \"items\", void 0);\r\n        SymbolGroup = tslib_1.__decorate([\r\n            decorators_1.subclass(\"draw.symbolgallery.SymbolGroup\")\r\n        ], SymbolGroup);\r\n        return SymbolGroup;\r\n    }(Accessor_1.default));\r\n    exports[\"default\"] = SymbolGroup;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/symbols/SymbolGroup.ts?");

/***/ }),

/***/ "./src/ts/widget/symbols/SymbolItem.ts":
/*!*********************************************!*\
  !*** ./src/ts/widget/symbols/SymbolItem.ts ***!
  \*********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\"), __webpack_require__(/*! esri/core/Accessor */ \"esri/core/Accessor\"), __webpack_require__(/*! esri/core/accessorSupport/decorators */ \"esri/core/accessorSupport/decorators\"), __webpack_require__(/*! esri/symbols/WebStyleSymbol */ \"esri/symbols/WebStyleSymbol\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, tslib_1, Accessor_1, decorators_1, WebStyleSymbol_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    Accessor_1 = tslib_1.__importDefault(Accessor_1);\r\n    WebStyleSymbol_1 = tslib_1.__importDefault(WebStyleSymbol_1);\r\n    var SymbolItem = /** @class */ (function (_super) {\r\n        tslib_1.__extends(SymbolItem, _super);\r\n        function SymbolItem(data, styleName) {\r\n            var _this = _super.call(this, data) || this;\r\n            _this.thumbnailHref = data.thumbnail.href;\r\n            _this.webSymbol = new WebStyleSymbol_1.default({\r\n                name: data.name,\r\n                styleName: styleName,\r\n            });\r\n            return _this;\r\n        }\r\n        SymbolItem.prototype.fetchSymbol = function () {\r\n            if (!this.fetchPromise) {\r\n                this.fetchPromise = this.webSymbol.fetchSymbol().then(function (actualSymbol) {\r\n                    // Add vertical offset to icon symbols as otherwise they vanish inside\r\n                    // extruded buildings where the ground is not even.\r\n                    if (actualSymbol.symbolLayers.length) {\r\n                        var symbolLayer = actualSymbol.symbolLayers.getItemAt(0);\r\n                        if (symbolLayer.type === \"icon\") {\r\n                            var icon = symbolLayer;\r\n                            icon.anchor = \"relative\";\r\n                            icon.anchorPosition = { x: 0, y: 0.6 };\r\n                            actualSymbol.verticalOffset = {\r\n                                screenLength: 20,\r\n                                maxWorldLength: 50,\r\n                                minWorldLength: 5,\r\n                            };\r\n                            actualSymbol.callout = {\r\n                                type: \"line\",\r\n                                color: [200, 200, 200],\r\n                                size: 0.8,\r\n                            };\r\n                            return actualSymbol.clone();\r\n                        }\r\n                    }\r\n                    return actualSymbol;\r\n                });\r\n            }\r\n            return this.fetchPromise;\r\n        };\r\n        tslib_1.__decorate([\r\n            decorators_1.property({\r\n                constructOnly: true,\r\n            })\r\n        ], SymbolItem.prototype, \"thumbnailHref\", void 0);\r\n        tslib_1.__decorate([\r\n            decorators_1.property()\r\n        ], SymbolItem.prototype, \"name\", void 0);\r\n        SymbolItem = tslib_1.__decorate([\r\n            decorators_1.subclass(\"widgets.symbolgallery.SymbolItem\")\r\n        ], SymbolItem);\r\n        return SymbolItem;\r\n    }(Accessor_1.default));\r\n    exports[\"default\"] = SymbolItem;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack:///./src/ts/widget/symbols/SymbolItem.ts?");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/tslib/tslib.es6.js?");

/***/ }),

/***/ "esri/Color":
/*!*****************************!*\
  !*** external "esri/Color" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_Color__;

/***/ }),

/***/ "esri/Graphic":
/*!*******************************!*\
  !*** external "esri/Graphic" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_Graphic__;

/***/ }),

/***/ "esri/WebScene":
/*!********************************!*\
  !*** external "esri/WebScene" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_WebScene__;

/***/ }),

/***/ "esri/core/Accessor":
/*!*************************************!*\
  !*** external "esri/core/Accessor" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_core_Accessor__;

/***/ }),

/***/ "esri/core/Collection":
/*!***************************************!*\
  !*** external "esri/core/Collection" ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_core_Collection__;

/***/ }),

/***/ "esri/core/accessorSupport/decorators":
/*!*******************************************************!*\
  !*** external "esri/core/accessorSupport/decorators" ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_core_accessorSupport_decorators__;

/***/ }),

/***/ "esri/core/promiseUtils":
/*!*****************************************!*\
  !*** external "esri/core/promiseUtils" ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_core_promiseUtils__;

/***/ }),

/***/ "esri/core/watchUtils":
/*!***************************************!*\
  !*** external "esri/core/watchUtils" ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_core_watchUtils__;

/***/ }),

/***/ "esri/geometry/Point":
/*!**************************************!*\
  !*** external "esri/geometry/Point" ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_geometry_Point__;

/***/ }),

/***/ "esri/geometry/Polygon":
/*!****************************************!*\
  !*** external "esri/geometry/Polygon" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_geometry_Polygon__;

/***/ }),

/***/ "esri/geometry/Polyline":
/*!*****************************************!*\
  !*** external "esri/geometry/Polyline" ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_geometry_Polyline__;

/***/ }),

/***/ "esri/geometry/SpatialReference":
/*!*************************************************!*\
  !*** external "esri/geometry/SpatialReference" ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_geometry_SpatialReference__;

/***/ }),

/***/ "esri/geometry/geometryEngine":
/*!***********************************************!*\
  !*** external "esri/geometry/geometryEngine" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_geometry_geometryEngine__;

/***/ }),

/***/ "esri/layers/GraphicsLayer":
/*!********************************************!*\
  !*** external "esri/layers/GraphicsLayer" ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_layers_GraphicsLayer__;

/***/ }),

/***/ "esri/layers/VectorTileLayer":
/*!**********************************************!*\
  !*** external "esri/layers/VectorTileLayer" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_layers_VectorTileLayer__;

/***/ }),

/***/ "esri/portal/Portal":
/*!*************************************!*\
  !*** external "esri/portal/Portal" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_portal_Portal__;

/***/ }),

/***/ "esri/portal/PortalQueryParams":
/*!************************************************!*\
  !*** external "esri/portal/PortalQueryParams" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_portal_PortalQueryParams__;

/***/ }),

/***/ "esri/renderers":
/*!*********************************!*\
  !*** external "esri/renderers" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_renderers__;

/***/ }),

/***/ "esri/request":
/*!*******************************!*\
  !*** external "esri/request" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_request__;

/***/ }),

/***/ "esri/symbols/ObjectSymbol3DLayer":
/*!***************************************************!*\
  !*** external "esri/symbols/ObjectSymbol3DLayer" ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_ObjectSymbol3DLayer__;

/***/ }),

/***/ "esri/symbols/PointSymbol3D":
/*!*********************************************!*\
  !*** external "esri/symbols/PointSymbol3D" ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_PointSymbol3D__;

/***/ }),

/***/ "esri/symbols/PolygonSymbol3D":
/*!***********************************************!*\
  !*** external "esri/symbols/PolygonSymbol3D" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_PolygonSymbol3D__;

/***/ }),

/***/ "esri/symbols/SimpleFillSymbol":
/*!************************************************!*\
  !*** external "esri/symbols/SimpleFillSymbol" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_SimpleFillSymbol__;

/***/ }),

/***/ "esri/symbols/SimpleLineSymbol":
/*!************************************************!*\
  !*** external "esri/symbols/SimpleLineSymbol" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_SimpleLineSymbol__;

/***/ }),

/***/ "esri/symbols/WebStyleSymbol":
/*!**********************************************!*\
  !*** external "esri/symbols/WebStyleSymbol" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_symbols_WebStyleSymbol__;

/***/ }),

/***/ "esri/views/SceneView":
/*!***************************************!*\
  !*** external "esri/views/SceneView" ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_views_SceneView__;

/***/ }),

/***/ "esri/views/layers/support/FeatureFilter":
/*!**********************************************************!*\
  !*** external "esri/views/layers/support/FeatureFilter" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_views_layers_support_FeatureFilter__;

/***/ }),

/***/ "esri/widgets/Sketch/SketchViewModel":
/*!******************************************************!*\
  !*** external "esri/widgets/Sketch/SketchViewModel" ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_widgets_Sketch_SketchViewModel__;

/***/ }),

/***/ "esri/widgets/Widget":
/*!**************************************!*\
  !*** external "esri/widgets/Widget" ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_widgets_Widget__;

/***/ }),

/***/ "esri/widgets/support/widget":
/*!**********************************************!*\
  !*** external "esri/widgets/support/widget" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_widgets_support_widget__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});;
